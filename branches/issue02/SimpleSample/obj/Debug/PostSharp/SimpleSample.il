// Generated by PostSharp 1.0.5.218 at 21.07.2007 15:21:24.
.typelist
{
  SimpleSample.Account
  SimpleSample.Program
  SimpleSample.Program/ContactWithManyAddresses
  SimpleSample.Program/Contact
  SimpleSample.Program/Address
  SimpleSample.Program/MyStruct
  SimpleSample.Program/MyClass
  SimpleSample.Program/'<>c__DisplayClass1'
  SimpleSample.Program/'<>c__DisplayClass3'
'~PostSharp~Laos~Implementation'
}
.assembly extern mscorlib
{
  .publickeytoken = (  B7 7A 5C 56 19 34 E0 89)
  .ver 2:0:0:0
}
.assembly extern NSTM
{
  .ver 1:0:0:202
}
.assembly extern System.Transactions
{
  .publickeytoken = (  B7 7A 5C 56 19 34 E0 89)
  .ver 2:0:0:0
}
.assembly extern PostSharp.Laos
{
  .publickeytoken = (  B1 3F D3 8B 8F 9C 99 D7)
  .ver 1:0:5:218
}
.assembly SimpleSample
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = (  01 00 00 00 00)
  .custom instance void [mscorlib]System.Reflection.AssemblyTrademarkAttribute::.ctor(string) = (  01 00 00 00 00)
  .custom instance void [mscorlib]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = (  01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78
                                                                                                             63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01)
  .custom instance void [mscorlib]System.Reflection.AssemblyCopyrightAttribute::.ctor(string) = (  01 00 24 43 6F 70 79 72 69 67 68 74 20 C2 A9 20
                                                                                                  4F 6E 65 20 4D 61 6E 20 54 68 69 6E 6B 20 54 61
                                                                                                  6E 6B 20 32 30 30 37 00 00)
  .custom instance void [mscorlib]System.Reflection.AssemblyProductAttribute::.ctor(string) = (  01 00 0C 53 69 6D 70 6C 65 53 61 6D 70 6C 65 00
                                                                                                00)
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = (  01 00 08 00 00 00 00 00)
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = (  01 00 24 31 33 62 62 38 37 39 63 2D 66 65 36 37
                                                                                                  2D 34 63 34 62 2D 62 30 62 62 2D 62 35 66 65 33
                                                                                                  66 62 32 34 62 32 33 00 00)
  .custom instance void [mscorlib]System.Reflection.AssemblyCompanyAttribute::.ctor(string) = (  01 00 12 4F 6E 65 20 4D 61 6E 20 54 68 69 6E 6B
                                                                                                20 54 61 6E 6B 00 00)
  // Intentionally skipped: System.Diagnostics.DebuggableAttribute
  .custom instance void [mscorlib]System.Reflection.AssemblyFileVersionAttribute::.ctor(string) = (  01 00 07 31 2E 30 2E 30 2E 30 00 00)
  .custom instance void [mscorlib]System.Reflection.AssemblyConfigurationAttribute::.ctor(string) = (  01 00 00 00 00)
  .custom instance void [mscorlib]System.Reflection.AssemblyDescriptionAttribute::.ctor(string) = (  01 00 00 00 00)
  .custom instance void [mscorlib]System.Reflection.AssemblyTitleAttribute::.ctor(string) = (  01 00 0C 53 69 6D 70 6C 65 53 61 6D 70 6C 65 00
                                                                                              00)
  .hash algorithm 0x00008004
  .ver 1:0:0:0
}
.mresource private '~PostSharp~Laos~CustomAttributes~'
{
}
.module SimpleSample.exe
.imagebase 0x400000
.file alignment 0x00001000
.stackreserve 0x100000
.subsystem 0x0003
.corflags 0x00000001
.class public auto ansi beforefieldinit SimpleSample.Account
      extends [mscorlib]System.Object
      implements  [NSTM]NSTM.INstmVersioned
{
}
// End of type: SimpleSample.Account


.class private auto ansi beforefieldinit SimpleSample.Program
      extends [mscorlib]System.Object
{
.class auto ansi nested private beforefieldinit ContactWithManyAddresses
      extends [mscorlib]System.Object
      implements  [NSTM]NSTM.INstmVersioned
{
}
// End of type: SimpleSample.Program::ContactWithManyAddresses



.class auto ansi nested private beforefieldinit Contact
      extends [mscorlib]System.Object
      implements  [NSTM]NSTM.INstmVersioned
{
}
// End of type: SimpleSample.Program::Contact



.class auto ansi nested private beforefieldinit Address
      extends [mscorlib]System.Object
      implements  [NSTM]NSTM.INstmVersioned
{
}
// End of type: SimpleSample.Program::Address



.class sequential ansi sealed nested private beforefieldinit MyStruct
      extends [mscorlib]System.ValueType
{
}
// End of type: SimpleSample.Program::MyStruct



.class auto ansi nested private beforefieldinit MyClass
      extends [mscorlib]System.Object
      implements  [mscorlib]System.ICloneable
{
}
// End of type: SimpleSample.Program::MyClass



.class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass1'
      extends [mscorlib]System.Object
{
}
// End of type: SimpleSample.Program::<>c__DisplayClass1



.class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass3'
      extends [mscorlib]System.Object
{
}
// End of type: SimpleSample.Program::<>c__DisplayClass3



}
// End of type: SimpleSample.Program


.class private auto ansi sealed '~PostSharp~Laos~Implementation'
      extends [mscorlib]System.Object
{
}
// End of type: ~PostSharp~Laos~Implementation


.class public auto ansi beforefieldinit SimpleSample.Account
      extends [mscorlib]System.Object
      implements  [NSTM]NSTM.INstmVersioned
{
  .field private int32 amount

  .field private int32 maxOverdraftAmount

  .field private class [NSTM]NSTM.INstmVersioned  '~composed~6'

  .field private initonly valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials instanceCredentials

  .method public hidebysig specialname rtspecialname
          instance void .ctor() cil managed
  {
    .maxstack 3
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 4 [New Root Block], 0 local(s), 0 handler(s), 5 child(ren), 0 sequence(s), 0-0
      {
        // InstructionBlock 3 [Initial Symbol Sequence Point Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0002:
        // {InstructionSequence 2 Modified, Comment="Initial Symbol Sequence Point Sequence"}
        .line 17,17 : 7,8  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
        nop       
      }
      {
        // InstructionBlock 5 [Entry Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      {
        // InstructionBlock 2 [Initialization Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0000:
        // {InstructionSequence 0 Original, Range=0-6 }
        .line 17,17 : 9,25
        ldarg.0   
        call       instance void [mscorlib]System.Object::.ctor()
      }
      {
        // InstructionBlock 6 [After Initialization Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      // InstructionBlock 7 [], 0 local(s), 0 handler(s), 6 child(ren), 0 sequence(s), 0-0
      // InstructionBlock 8 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0004:
      // {InstructionSequence 4 Modified, Comment=""}
      ldarg.0   
      ldsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~6'
      ldarg.0   
      newobj     instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::.ctor(object)
      callvirt   instance object [PostSharp.Laos]PostSharp.Laos.ICompositionAspect::CreateImplementationObject(class [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs)
      castclass  [NSTM]NSTM.INstmVersioned
      stfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Account:: '~composed~6'
      {
        // InstructionBlock 9 [Before instruction {Stfld SimpleSample.Account/amount}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0005:
        // {InstructionSequence 5 Original, Range=6-a }
        nop       
        .line 18,18 : 9,10
        nop       
        .line 19,19 : 13,29
        ldarg.0   
        ldc.i4.0  
      }
      {
        // InstructionBlock 11 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfSetField} at {Stfld SimpleSample.Account/amount}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0007:
        // {InstructionSequence 7 Modified, Comment=""}
        call       instance void SimpleSample.Account:: '~set~amount'(int32)
      }
      {
        // InstructionBlock 12 [Before instruction {Stfld SimpleSample.Account/maxOverdraftAmount}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0008:
        // {InstructionSequence 8 Original, Range=f-11 }
        .line 20,20 : 13,41
        ldarg.0   
        ldc.i4.0  
      }
      {
        // InstructionBlock 14 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfSetField} at {Stfld SimpleSample.Account/maxOverdraftAmount}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_000A:
        // {InstructionSequence 10 Modified, Comment=""}
        call       instance void SimpleSample.Account:: '~set~maxOverdraftAmount'(int32)
      }
      {
        // InstructionBlock 13 [After instruction {Stfld SimpleSample.Account/maxOverdraftAmount}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0009:
        // {InstructionSequence 9 Original, Range=16-18 }
        .line 21,21 : 9,10
        nop       
        ret       
      }
    }
  }
  // End of method: SimpleSample.Account/.ctor() : void

  .method public hidebysig specialname rtspecialname
          instance void .ctor(int32 initialAmount,
                              int32 maxOverdraftAmount) cil managed
  {
    .maxstack 3
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 4 [New Root Block], 0 local(s), 0 handler(s), 5 child(ren), 0 sequence(s), 0-0
      {
        // InstructionBlock 3 [Initial Symbol Sequence Point Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0002:
        // {InstructionSequence 2 Modified, Comment="Initial Symbol Sequence Point Sequence"}
        .line 23,23 : 7,8  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
        nop       
      }
      {
        // InstructionBlock 5 [Entry Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      {
        // InstructionBlock 2 [Initialization Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0000:
        // {InstructionSequence 0 Original, Range=0-6 }
        .line 23,23 : 9,66
        ldarg.0   
        call       instance void [mscorlib]System.Object::.ctor()
      }
      {
        // InstructionBlock 6 [After Initialization Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      // InstructionBlock 7 [], 0 local(s), 0 handler(s), 6 child(ren), 0 sequence(s), 0-0
      // InstructionBlock 8 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0004:
      // {InstructionSequence 4 Modified, Comment=""}
      ldarg.0   
      ldsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~6'
      ldarg.0   
      newobj     instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::.ctor(object)
      callvirt   instance object [PostSharp.Laos]PostSharp.Laos.ICompositionAspect::CreateImplementationObject(class [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs)
      castclass  [NSTM]NSTM.INstmVersioned
      stfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Account:: '~composed~6'
      {
        // InstructionBlock 9 [Before instruction {Stfld SimpleSample.Account/amount}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0005:
        // {InstructionSequence 5 Original, Range=6-a }
        nop       
        .line 24,24 : 9,10
        nop       
        .line 25,25 : 13,41
        ldarg.0   
        ldarg.1   
      }
      {
        // InstructionBlock 11 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfSetField} at {Stfld SimpleSample.Account/amount}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0007:
        // {InstructionSequence 7 Modified, Comment=""}
        call       instance void SimpleSample.Account:: '~set~amount'(int32)
      }
      {
        // InstructionBlock 12 [Before instruction {Stfld SimpleSample.Account/maxOverdraftAmount}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0008:
        // {InstructionSequence 8 Original, Range=f-11 }
        .line 26,26 : 13,58
        ldarg.0   
        ldarg.2   
      }
      {
        // InstructionBlock 14 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfSetField} at {Stfld SimpleSample.Account/maxOverdraftAmount}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_000A:
        // {InstructionSequence 10 Modified, Comment=""}
        call       instance void SimpleSample.Account:: '~set~maxOverdraftAmount'(int32)
      }
      {
        // InstructionBlock 13 [After instruction {Stfld SimpleSample.Account/maxOverdraftAmount}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0009:
        // {InstructionSequence 9 Original, Range=16-18 }
        .line 27,27 : 9,10
        nop       
        ret       
      }
    }
  }
  // End of method: SimpleSample.Account/.ctor(int32 initialAmount, int32 maxOverdraftAmount) : void

  .method public hidebysig specialname instance int32
          get_Amount() cil managed
  {
    .maxstack 1
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-c
      .locals init ( [0]  int32 CS$1$0000)
      {
        // InstructionBlock 1 [Before instruction {Ldfld SimpleSample.Account/amount}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0002:
        // {InstructionSequence 2 Original, Range=0-2 }
        .line 32,32 : 13,14  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
        nop       
        .line 33,33 : 17,36
        ldarg.0   
      }
      {
        // InstructionBlock 3 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfGetField} at {Ldfld SimpleSample.Account/amount}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0004:
        // {InstructionSequence 4 Modified, Comment=""}
        call       instance int32 SimpleSample.Account:: '~get~amount'()
      }
      {
        // InstructionBlock 2 [After instruction {Ldfld SimpleSample.Account/amount}.], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

      IL_0003:
        // {InstructionSequence 3 Original, Range=7-a }
        stloc.0   
        br.s       IL_0001

      IL_0001:
        // {InstructionSequence 1 Original, Range=a-c }
        .line 34,34 : 13,14
        ldloc.0   
        ret       
      }
    }
  }
  // End of method: SimpleSample.Account/get_Amount() : int32

  .method public hidebysig specialname instance void
          set_Amount(int32  'value') cil managed
  {
    .maxstack 2
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 7 child(ren), 0 sequence(s), 0-34
      .locals init ( [0]  bool CS$4$0000)
      {
        // InstructionBlock 1 [Before instruction {Ldfld SimpleSample.Account/maxOverdraftAmount}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0003:
        // {InstructionSequence 3 Original, Range=0-3 }
        .line 36,36 : 13,14  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
        nop       
        .line 37,37 : 17,48
        ldarg.1   
        ldarg.0   
      }
      {
        // InstructionBlock 3 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfGetField} at {Ldfld SimpleSample.Account/maxOverdraftAmount}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0005:
        // {InstructionSequence 5 Modified, Comment=""}
        call       instance int32 SimpleSample.Account:: '~get~maxOverdraftAmount'()
      }
      {
        // InstructionBlock 4 [Before instruction {Ldfld SimpleSample.Account/maxOverdraftAmount}.], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

      IL_0004:
        // {InstructionSequence 4 Original, Range=8-11 }
        clt       
        ldc.i4.0  
        ceq       
        stloc.0   
        .line 0x00feefee
        ldloc.0   
        brtrue.s   IL_0009

      IL_0006:
        // {InstructionSequence 6 Original, Range=11-17 }
        .line 38,38 : 21,137
        ldstr       "Cannot overdraw account beyond {0} Euros!"
        ldarg.0   
      }
      {
        // InstructionBlock 6 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfGetField} at {Ldfld SimpleSample.Account/maxOverdraftAmount}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0008:
        // {InstructionSequence 8 Modified, Comment=""}
        call       instance int32 SimpleSample.Account:: '~get~maxOverdraftAmount'()
      }
      {
        // InstructionBlock 7 [Before instruction {Stfld SimpleSample.Account/amount}.], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

      IL_0007:
        // {InstructionSequence 7 Original, Range=1c-2c }
        box        [mscorlib]System.Int32
        call       string [mscorlib]System.String::Format(string,
                                                          object)
        newobj     instance void [mscorlib]System.ApplicationException::.ctor(string)
        throw     

      IL_0009:
        // {InstructionSequence 9 Original, Range=2c-2e }
        .line 39,39 : 17,37
        ldarg.0   
        ldarg.1   
      }
      {
        // InstructionBlock 9 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfSetField} at {Stfld SimpleSample.Account/amount}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_000B:
        // {InstructionSequence 11 Modified, Comment=""}
        call       instance void SimpleSample.Account:: '~set~amount'(int32)
      }
      {
        // InstructionBlock 8 [After instruction {Stfld SimpleSample.Account/amount}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_000A:
        // {InstructionSequence 10 Original, Range=33-34 }
        .line 40,40 : 13,14
        ret       
      }
    }
  }
  // End of method: SimpleSample.Account/set_Amount(int32 value) : void

  .method private hidebysig newslot virtual final
          int64 SimpleSample.Account.get_Version() cil managed
  {
    .override [NSTM]NSTM.INstmVersioned::get_Version
    .maxstack 1
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

  IL_0000:
    // {InstructionSequence 0 Modified, Comment=""}
    ldarg.0   
    ldfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Account:: '~composed~6'
    tail.
    callvirt   instance int64 [NSTM]NSTM.INstmVersioned::get_Version()
    ret       
  }
  // End of method: SimpleSample.Account/SimpleSample.Account.get_Version() : int64

  .method private hidebysig newslot virtual final
          void SimpleSample.Account.IncrementVersion() cil managed
  {
    .override [NSTM]NSTM.INstmVersioned::IncrementVersion
    .maxstack 1
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

  IL_0000:
    // {InstructionSequence 0 Modified, Comment=""}
    ldarg.0   
    ldfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Account:: '~composed~6'
    tail.
    callvirt   instance void [NSTM]NSTM.INstmVersioned::IncrementVersion()
    ret       
  }
  // End of method: SimpleSample.Account/SimpleSample.Account.IncrementVersion() : void

  .method private hidebysig specialname rtspecialname static
          void .cctor() cil managed
  {
    .maxstack 4
    {
      // InstructionBlock 2 [New Root Block], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
      {
        // InstructionBlock 3 [Entry Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      // InstructionBlock 4 [], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
      // InstructionBlock 5 [], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

    IL_0003:
      // {InstructionSequence 3 Modified, Comment=""}
      ldsfld     bool '~PostSharp~Laos~Implementation'::initialized
      brtrue.s   IL_0002
      call       void [PostSharp.Laos]PostSharp.Laos.LaosNotInitializedException::Throw()

    IL_0002:
      // {InstructionSequence 2 Modified, Comment=""}
      ldtoken    SimpleSample.Account
      call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      stsfld     class [mscorlib]System.Type '~PostSharp~Laos~Implementation':: '~targetType~6'
      ldsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~6'
      ldsfld     class [mscorlib]System.Type '~PostSharp~Laos~Implementation':: '~targetType~6'
      callvirt   instance void [PostSharp.Laos]PostSharp.Laos.ILaosTypeLevelAspect::RuntimeInitialize(class [mscorlib]System.Type)
      ldtoken    field int32 SimpleSample.Account::maxOverdraftAmount
      call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
      stsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~8'
      ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~8'
      ldsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~8'
      callvirt   instance void [PostSharp.Laos]PostSharp.Laos.LaosFieldLevelAspect::RuntimeInitialize(class [mscorlib]System.Reflection.FieldInfo)
      ldtoken    field int32 SimpleSample.Account::amount
      call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
      stsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~7'
      ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~7'
      ldsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~7'
      callvirt   instance void [PostSharp.Laos]PostSharp.Laos.LaosFieldLevelAspect::RuntimeInitialize(class [mscorlib]System.Reflection.FieldInfo)
      {
        // InstructionBlock 0 [Old Root Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0000:
        // {InstructionSequence 0 Modified, Comment=""}
        ret       
      }
    }
  }
  // End of method: SimpleSample.Account/.cctor() : void

  .method private hidebysig instance int32
'~get~amount'() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 2 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  int32 fieldValue,
                     [2]  int32  '~emptyValue~2')
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      int32 SimpleSample.Account::amount
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfGetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldnull    
        ldloc      fieldValue
        box        [mscorlib]System.Int32
        ldtoken    field int32 SimpleSample.Account::amount
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Account::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~7'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnGetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_ExposedFieldValue()
        dup       
        brfalse.s  IL_0003
        unbox      [mscorlib]System.Int32
        ldobj      [mscorlib]System.Int32
        stloc      fieldValue
        br.s       IL_0004

      IL_0003:
        // {InstructionSequence 3 Modified, Comment=""}
        pop       
        ldloca      '~emptyValue~2'
        initobj    int32
        ldloc       '~emptyValue~2'
        stloc      fieldValue

      IL_0004:
        // {InstructionSequence 4 Not Commited, Comment=""}
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldloc      fieldValue
      ret       
    }
  }
  // End of method: SimpleSample.Account/~get~amount() : int32

  .method family instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials
          GetInstanceCredentials() cil managed
  {
    .maxstack 1
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

  IL_0000:
    // {InstructionSequence 0 Modified, Comment=""}
    ldarg.0   
    ldfld      valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Account::instanceCredentials
    ret       
  }
  // End of method: SimpleSample.Account/GetInstanceCredentials() : [PostSharp.Laos]PostSharp.Laos.InstanceCredentials

  .method private hidebysig instance void
'~set~amount'(int32  'value') cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  int32 fieldValue)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      int32 SimpleSample.Account::amount
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfSetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldarg.1   
        box        [mscorlib]System.Int32
        ldloc      fieldValue
        box        [mscorlib]System.Int32
        ldtoken    field int32 SimpleSample.Account::amount
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Account::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~7'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnSetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_StoredFieldValue()
        unbox      [mscorlib]System.Int32
        ldobj      [mscorlib]System.Int32
        stloc      fieldValue
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldarg.0   
      ldloc      fieldValue
      stfld      int32 SimpleSample.Account::amount
      ret       
    }
  }
  // End of method: SimpleSample.Account/~set~amount(int32 value) : void

  .method private hidebysig instance int32
'~get~maxOverdraftAmount'() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 2 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  int32 fieldValue,
                     [2]  int32  '~emptyValue~2')
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      int32 SimpleSample.Account::maxOverdraftAmount
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfGetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldnull    
        ldloc      fieldValue
        box        [mscorlib]System.Int32
        ldtoken    field int32 SimpleSample.Account::maxOverdraftAmount
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Account::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~8'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnGetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_ExposedFieldValue()
        dup       
        brfalse.s  IL_0003
        unbox      [mscorlib]System.Int32
        ldobj      [mscorlib]System.Int32
        stloc      fieldValue
        br.s       IL_0004

      IL_0003:
        // {InstructionSequence 3 Modified, Comment=""}
        pop       
        ldloca      '~emptyValue~2'
        initobj    int32
        ldloc       '~emptyValue~2'
        stloc      fieldValue

      IL_0004:
        // {InstructionSequence 4 Not Commited, Comment=""}
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldloc      fieldValue
      ret       
    }
  }
  // End of method: SimpleSample.Account/~get~maxOverdraftAmount() : int32

  .method private hidebysig instance void
'~set~maxOverdraftAmount'(int32  'value') cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  int32 fieldValue)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      int32 SimpleSample.Account::maxOverdraftAmount
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfSetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldarg.1   
        box        [mscorlib]System.Int32
        ldloc      fieldValue
        box        [mscorlib]System.Int32
        ldtoken    field int32 SimpleSample.Account::maxOverdraftAmount
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Account::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~8'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnSetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_StoredFieldValue()
        unbox      [mscorlib]System.Int32
        ldobj      [mscorlib]System.Int32
        stloc      fieldValue
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldarg.0   
      ldloc      fieldValue
      stfld      int32 SimpleSample.Account::maxOverdraftAmount
      ret       
    }
  }
  // End of method: SimpleSample.Account/~set~maxOverdraftAmount(int32 value) : void

  .property instance int32 Amount()
  {
    .get instance int32 SimpleSample.Account::get_Amount()
    .set instance void SimpleSample.Account::set_Amount(int32)
  }

}
// End of type: SimpleSample.Account


.class private auto ansi beforefieldinit SimpleSample.Program
      extends [mscorlib]System.Object
{
.class auto ansi nested private beforefieldinit ContactWithManyAddresses
      extends [mscorlib]System.Object
      implements  [NSTM]NSTM.INstmVersioned
{
  .field private string name

  .field private class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> addresses

  .field private class [NSTM]NSTM.INstmVersioned  '~composed~9'

  .field private initonly valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials instanceCredentials

  .method public hidebysig specialname rtspecialname
          instance void .ctor() cil managed
  {
    .maxstack 3
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 4 [New Root Block], 0 local(s), 0 handler(s), 5 child(ren), 0 sequence(s), 0-0
      {
        // InstructionBlock 3 [Initial Symbol Sequence Point Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0002:
        // {InstructionSequence 2 Modified, Comment="Initial Symbol Sequence Point Sequence"}
        .line 52,52 : 11,12  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
        nop       
      }
      {
        // InstructionBlock 5 [Entry Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      {
        // InstructionBlock 2 [Initialization Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0000:
        // {InstructionSequence 0 Original, Range=0-6 }
        .line 52,52 : 13,46
        ldarg.0   
        call       instance void [mscorlib]System.Object::.ctor()
      }
      {
        // InstructionBlock 6 [After Initialization Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      // InstructionBlock 7 [], 0 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 0-0
      // InstructionBlock 8 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0004:
      // {InstructionSequence 4 Modified, Comment=""}
      ldarg.0   
      ldsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~9'
      ldarg.0   
      newobj     instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::.ctor(object)
      callvirt   instance object [PostSharp.Laos]PostSharp.Laos.ICompositionAspect::CreateImplementationObject(class [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs)
      castclass  [NSTM]NSTM.INstmVersioned
      stfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Program/ContactWithManyAddresses:: '~composed~9'
      {
        // InstructionBlock 9 [Before instruction {Stfld SimpleSample.Program::ContactWithManyAddresses/addresses}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0005:
        // {InstructionSequence 5 Original, Range=6-e }
        nop       
        .line 53,53 : 13,14
        nop       
        .line 54,54 : 17,54
        ldarg.0   
        newobj     instance void class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address>::.ctor()
      }
      {
        // InstructionBlock 11 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfSetField} at {Stfld SimpleSample.Program::ContactWithManyAddresses/addresses}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0007:
        // {InstructionSequence 7 Modified, Comment=""}
        call       instance void SimpleSample.Program/ContactWithManyAddresses:: '~set~addresses'(class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address>)
      }
      {
        // InstructionBlock 10 [After instruction {Stfld SimpleSample.Program::ContactWithManyAddresses/addresses}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0006:
        // {InstructionSequence 6 Original, Range=13-15 }
        .line 55,55 : 13,14
        nop       
        ret       
      }
    }
  }
  // End of method: SimpleSample.Program::ContactWithManyAddresses/.ctor() : void

  .method public hidebysig specialname instance string
          get_Name() cil managed
  {
    .maxstack 1
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-c
      .locals init ( [0]  string CS$1$0000)
      {
        // InstructionBlock 1 [Before instruction {Ldfld SimpleSample.Program::ContactWithManyAddresses/name}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0002:
        // {InstructionSequence 2 Original, Range=0-2 }
        .line 59,59 : 21,22  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
        nop       
        .line 59,59 : 23,35
        ldarg.0   
      }
      {
        // InstructionBlock 3 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfGetField} at {Ldfld SimpleSample.Program::ContactWithManyAddresses/name}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0004:
        // {InstructionSequence 4 Modified, Comment=""}
        call       instance string SimpleSample.Program/ContactWithManyAddresses:: '~get~name'()
      }
      {
        // InstructionBlock 2 [After instruction {Ldfld SimpleSample.Program::ContactWithManyAddresses/name}.], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

      IL_0003:
        // {InstructionSequence 3 Original, Range=7-a }
        stloc.0   
        br.s       IL_0001

      IL_0001:
        // {InstructionSequence 1 Original, Range=a-c }
        .line 59,59 : 36,37
        ldloc.0   
        ret       
      }
    }
  }
  // End of method: SimpleSample.Program::ContactWithManyAddresses/get_Name() : string

  .method public hidebysig specialname instance void
          set_Name(string  'value') cil managed
  {
    .maxstack 2
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-9
    {
      // InstructionBlock 1 [Before instruction {Stfld SimpleSample.Program::ContactWithManyAddresses/name}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Original, Range=0-3 }
      .line 60,60 : 21,22  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 60,60 : 23,36
      ldarg.0   
      ldarg.1   
    }
    {
      // InstructionBlock 3 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfSetField} at {Stfld SimpleSample.Program::ContactWithManyAddresses/name}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0003:
      // {InstructionSequence 3 Modified, Comment=""}
      call       instance void SimpleSample.Program/ContactWithManyAddresses:: '~set~name'(string)
    }
    {
      // InstructionBlock 2 [After instruction {Stfld SimpleSample.Program::ContactWithManyAddresses/name}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0002:
      // {InstructionSequence 2 Original, Range=8-9 }
      .line 60,60 : 37,38
      ret       
    }
  }
  // End of method: SimpleSample.Program::ContactWithManyAddresses/set_Name(string value) : void

  .method public hidebysig specialname instance class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address>
          get_Addresses() cil managed
  {
    .maxstack 1
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-c
      .locals init ( [0]  class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> CS$1$0000)
      {
        // InstructionBlock 1 [Before instruction {Ldfld SimpleSample.Program::ContactWithManyAddresses/addresses}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0002:
        // {InstructionSequence 2 Original, Range=0-2 }
        .line 65,65 : 21,22  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
        nop       
        .line 65,65 : 23,45
        ldarg.0   
      }
      {
        // InstructionBlock 3 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfGetField} at {Ldfld SimpleSample.Program::ContactWithManyAddresses/addresses}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0004:
        // {InstructionSequence 4 Modified, Comment=""}
        call       instance class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> SimpleSample.Program/ContactWithManyAddresses:: '~get~addresses'()
      }
      {
        // InstructionBlock 2 [After instruction {Ldfld SimpleSample.Program::ContactWithManyAddresses/addresses}.], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

      IL_0003:
        // {InstructionSequence 3 Original, Range=7-a }
        stloc.0   
        br.s       IL_0001

      IL_0001:
        // {InstructionSequence 1 Original, Range=a-c }
        .line 65,65 : 46,47
        ldloc.0   
        ret       
      }
    }
  }
  // End of method: SimpleSample.Program::ContactWithManyAddresses/get_Addresses() : [mscorlib]System.Collections.Generic.List`1<SimpleSample.Program::Address>

  .method private hidebysig newslot virtual final
          int64  'SimpleSample.Program::ContactWithManyAddresses.get_Version'() cil managed
  {
    .override [NSTM]NSTM.INstmVersioned::get_Version
    .maxstack 1
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

  IL_0000:
    // {InstructionSequence 0 Modified, Comment=""}
    ldarg.0   
    ldfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Program/ContactWithManyAddresses:: '~composed~9'
    tail.
    callvirt   instance int64 [NSTM]NSTM.INstmVersioned::get_Version()
    ret       
  }
  // End of method: SimpleSample.Program::ContactWithManyAddresses/SimpleSample.Program::ContactWithManyAddresses.get_Version() : int64

  .method private hidebysig newslot virtual final
          void  'SimpleSample.Program::ContactWithManyAddresses.IncrementVersion'() cil managed
  {
    .override [NSTM]NSTM.INstmVersioned::IncrementVersion
    .maxstack 1
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

  IL_0000:
    // {InstructionSequence 0 Modified, Comment=""}
    ldarg.0   
    ldfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Program/ContactWithManyAddresses:: '~composed~9'
    tail.
    callvirt   instance void [NSTM]NSTM.INstmVersioned::IncrementVersion()
    ret       
  }
  // End of method: SimpleSample.Program::ContactWithManyAddresses/SimpleSample.Program::ContactWithManyAddresses.IncrementVersion() : void

  .method private hidebysig specialname rtspecialname static
          void .cctor() cil managed
  {
    .maxstack 4
    {
      // InstructionBlock 2 [New Root Block], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
      {
        // InstructionBlock 3 [Entry Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      // InstructionBlock 4 [], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
      // InstructionBlock 5 [], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

    IL_0003:
      // {InstructionSequence 3 Modified, Comment=""}
      ldsfld     bool '~PostSharp~Laos~Implementation'::initialized
      brtrue.s   IL_0002
      call       void [PostSharp.Laos]PostSharp.Laos.LaosNotInitializedException::Throw()

    IL_0002:
      // {InstructionSequence 2 Modified, Comment=""}
      ldtoken    SimpleSample.Program/ContactWithManyAddresses
      call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      stsfld     class [mscorlib]System.Type '~PostSharp~Laos~Implementation':: '~targetType~9'
      ldsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~9'
      ldsfld     class [mscorlib]System.Type '~PostSharp~Laos~Implementation':: '~targetType~9'
      callvirt   instance void [PostSharp.Laos]PostSharp.Laos.ILaosTypeLevelAspect::RuntimeInitialize(class [mscorlib]System.Type)
      ldtoken    field class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> SimpleSample.Program/ContactWithManyAddresses::addresses
      call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
      stsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~11'
      ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~11'
      ldsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~11'
      callvirt   instance void [PostSharp.Laos]PostSharp.Laos.LaosFieldLevelAspect::RuntimeInitialize(class [mscorlib]System.Reflection.FieldInfo)
      ldtoken    field string SimpleSample.Program/ContactWithManyAddresses::name
      call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
      stsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~10'
      ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~10'
      ldsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~10'
      callvirt   instance void [PostSharp.Laos]PostSharp.Laos.LaosFieldLevelAspect::RuntimeInitialize(class [mscorlib]System.Reflection.FieldInfo)
      {
        // InstructionBlock 0 [Old Root Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0000:
        // {InstructionSequence 0 Modified, Comment=""}
        ret       
      }
    }
  }
  // End of method: SimpleSample.Program::ContactWithManyAddresses/.cctor() : void

  .method private hidebysig instance string
'~get~name'() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  string fieldValue)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      string SimpleSample.Program/ContactWithManyAddresses::name
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfGetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldnull    
        ldloc      fieldValue
        ldtoken    field string SimpleSample.Program/ContactWithManyAddresses::name
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/ContactWithManyAddresses::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~10'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnGetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_ExposedFieldValue()
        castclass  [mscorlib]System.String
        stloc      fieldValue
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldloc      fieldValue
      ret       
    }
  }
  // End of method: SimpleSample.Program::ContactWithManyAddresses/~get~name() : string

  .method family instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials
          GetInstanceCredentials() cil managed
  {
    .maxstack 1
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

  IL_0000:
    // {InstructionSequence 0 Modified, Comment=""}
    ldarg.0   
    ldfld      valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/ContactWithManyAddresses::instanceCredentials
    ret       
  }
  // End of method: SimpleSample.Program::ContactWithManyAddresses/GetInstanceCredentials() : [PostSharp.Laos]PostSharp.Laos.InstanceCredentials

  .method private hidebysig instance void
'~set~name'(string  'value') cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  string fieldValue)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      string SimpleSample.Program/ContactWithManyAddresses::name
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfSetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldarg.1   
        ldloc      fieldValue
        ldtoken    field string SimpleSample.Program/ContactWithManyAddresses::name
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/ContactWithManyAddresses::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~10'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnSetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_StoredFieldValue()
        castclass  [mscorlib]System.String
        stloc      fieldValue
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldarg.0   
      ldloc      fieldValue
      stfld      string SimpleSample.Program/ContactWithManyAddresses::name
      ret       
    }
  }
  // End of method: SimpleSample.Program::ContactWithManyAddresses/~set~name(string value) : void

  .method private hidebysig instance class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address>
'~get~addresses'() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> fieldValue)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> SimpleSample.Program/ContactWithManyAddresses::addresses
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfGetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldnull    
        ldloc      fieldValue
        ldtoken    field class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> SimpleSample.Program/ContactWithManyAddresses::addresses
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/ContactWithManyAddresses::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~11'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnGetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_ExposedFieldValue()
        castclass  class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address>
        stloc      fieldValue
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldloc      fieldValue
      ret       
    }
  }
  // End of method: SimpleSample.Program::ContactWithManyAddresses/~get~addresses() : [mscorlib]System.Collections.Generic.List`1<SimpleSample.Program::Address>

  .method private hidebysig instance void
'~set~addresses'(class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address>  'value') cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> fieldValue)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> SimpleSample.Program/ContactWithManyAddresses::addresses
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfSetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldarg.1   
        ldloc      fieldValue
        ldtoken    field class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> SimpleSample.Program/ContactWithManyAddresses::addresses
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/ContactWithManyAddresses::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~11'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnSetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_StoredFieldValue()
        castclass  class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address>
        stloc      fieldValue
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldarg.0   
      ldloc      fieldValue
      stfld      class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> SimpleSample.Program/ContactWithManyAddresses::addresses
      ret       
    }
  }
  // End of method: SimpleSample.Program::ContactWithManyAddresses/~set~addresses([mscorlib]System.Collections.Generic.List`1<SimpleSample.Program::Address> value) : void

  .property instance string Name()
  {
    .get instance string SimpleSample.Program/ContactWithManyAddresses::get_Name()
    .set instance void SimpleSample.Program/ContactWithManyAddresses::set_Name(string)
  }

  .property instance class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address>
            Addresses()
  {
    .get instance class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> SimpleSample.Program/ContactWithManyAddresses::get_Addresses()
  }

}
// End of type: SimpleSample.Program::ContactWithManyAddresses



.class auto ansi nested private beforefieldinit Contact
      extends [mscorlib]System.Object
      implements  [NSTM]NSTM.INstmVersioned
{
  .field private string name

  .field private class SimpleSample.Program/Address location

  .field private class [NSTM]NSTM.INstmVersioned  '~composed~12'

  .field private initonly valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials instanceCredentials

  .method public hidebysig specialname instance string
          get_Name() cil managed
  {
    .maxstack 1
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-c
      .locals init ( [0]  string CS$1$0000)
      {
        // InstructionBlock 1 [Before instruction {Ldfld SimpleSample.Program::Contact/name}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0002:
        // {InstructionSequence 2 Original, Range=0-2 }
        .line 77,77 : 21,22  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
        nop       
        .line 77,77 : 23,35
        ldarg.0   
      }
      {
        // InstructionBlock 3 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfGetField} at {Ldfld SimpleSample.Program::Contact/name}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0004:
        // {InstructionSequence 4 Modified, Comment=""}
        call       instance string SimpleSample.Program/Contact:: '~get~name'()
      }
      {
        // InstructionBlock 2 [After instruction {Ldfld SimpleSample.Program::Contact/name}.], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

      IL_0003:
        // {InstructionSequence 3 Original, Range=7-a }
        stloc.0   
        br.s       IL_0001

      IL_0001:
        // {InstructionSequence 1 Original, Range=a-c }
        .line 77,77 : 36,37
        ldloc.0   
        ret       
      }
    }
  }
  // End of method: SimpleSample.Program::Contact/get_Name() : string

  .method public hidebysig specialname instance void
          set_Name(string  'value') cil managed
  {
    .maxstack 2
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-9
    {
      // InstructionBlock 1 [Before instruction {Stfld SimpleSample.Program::Contact/name}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Original, Range=0-3 }
      .line 78,78 : 21,22  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 78,78 : 23,36
      ldarg.0   
      ldarg.1   
    }
    {
      // InstructionBlock 3 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfSetField} at {Stfld SimpleSample.Program::Contact/name}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0003:
      // {InstructionSequence 3 Modified, Comment=""}
      call       instance void SimpleSample.Program/Contact:: '~set~name'(string)
    }
    {
      // InstructionBlock 2 [After instruction {Stfld SimpleSample.Program::Contact/name}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0002:
      // {InstructionSequence 2 Original, Range=8-9 }
      .line 78,78 : 37,38
      ret       
    }
  }
  // End of method: SimpleSample.Program::Contact/set_Name(string value) : void

  .method public hidebysig specialname instance class SimpleSample.Program/Address
          get_Location() cil managed
  {
    .maxstack 1
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-c
      .locals init ( [0]  class SimpleSample.Program/Address CS$1$0000)
      {
        // InstructionBlock 1 [Before instruction {Ldfld SimpleSample.Program::Contact/location}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0002:
        // {InstructionSequence 2 Original, Range=0-2 }
        .line 85,85 : 21,22  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
        nop       
        .line 85,85 : 23,39
        ldarg.0   
      }
      {
        // InstructionBlock 3 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfGetField} at {Ldfld SimpleSample.Program::Contact/location}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0004:
        // {InstructionSequence 4 Modified, Comment=""}
        call       instance class SimpleSample.Program/Address SimpleSample.Program/Contact:: '~get~location'()
      }
      {
        // InstructionBlock 2 [After instruction {Ldfld SimpleSample.Program::Contact/location}.], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

      IL_0003:
        // {InstructionSequence 3 Original, Range=7-a }
        stloc.0   
        br.s       IL_0001

      IL_0001:
        // {InstructionSequence 1 Original, Range=a-c }
        .line 85,85 : 40,41
        ldloc.0   
        ret       
      }
    }
  }
  // End of method: SimpleSample.Program::Contact/get_Location() : SimpleSample.Program::Address

  .method public hidebysig specialname instance void
          set_Location(class SimpleSample.Program/Address  'value') cil managed
  {
    .maxstack 2
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-9
    {
      // InstructionBlock 1 [Before instruction {Stfld SimpleSample.Program::Contact/location}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Original, Range=0-3 }
      .line 86,86 : 21,22  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 86,86 : 23,40
      ldarg.0   
      ldarg.1   
    }
    {
      // InstructionBlock 3 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfSetField} at {Stfld SimpleSample.Program::Contact/location}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0003:
      // {InstructionSequence 3 Modified, Comment=""}
      call       instance void SimpleSample.Program/Contact:: '~set~location'(class SimpleSample.Program/Address)
    }
    {
      // InstructionBlock 2 [After instruction {Stfld SimpleSample.Program::Contact/location}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0002:
      // {InstructionSequence 2 Original, Range=8-9 }
      .line 86,86 : 41,42
      ret       
    }
  }
  // End of method: SimpleSample.Program::Contact/set_Location(SimpleSample.Program::Address value) : void

  .method public hidebysig specialname rtspecialname
          instance void .ctor() cil managed
  {
    .maxstack 3
    {
      // InstructionBlock 3 [New Root Block], 0 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 0-0
      {
        // InstructionBlock 4 [Entry Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      {
        // InstructionBlock 2 [Initialization Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0000:
        // {InstructionSequence 0 Original, Range=0-6 }
        ldarg.0   
        call       instance void [mscorlib]System.Object::.ctor()
      }
      {
        // InstructionBlock 5 [After Initialization Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      // InstructionBlock 6 [], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
      // InstructionBlock 7 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0003:
      // {InstructionSequence 3 Modified, Comment=""}
      ldarg.0   
      ldsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~12'
      ldarg.0   
      newobj     instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::.ctor(object)
      callvirt   instance object [PostSharp.Laos]PostSharp.Laos.ICompositionAspect::CreateImplementationObject(class [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs)
      castclass  [NSTM]NSTM.INstmVersioned
      stfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Program/Contact:: '~composed~12'
      {
        // InstructionBlock 1 [Protected Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0001:
        // {InstructionSequence 1 Original, Range=6-7 }
        ret       
      }
    }
  }
  // End of method: SimpleSample.Program::Contact/.ctor() : void

  .method private hidebysig newslot virtual final
          int64  'SimpleSample.Program::Contact.get_Version'() cil managed
  {
    .override [NSTM]NSTM.INstmVersioned::get_Version
    .maxstack 1
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

  IL_0000:
    // {InstructionSequence 0 Modified, Comment=""}
    ldarg.0   
    ldfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Program/Contact:: '~composed~12'
    tail.
    callvirt   instance int64 [NSTM]NSTM.INstmVersioned::get_Version()
    ret       
  }
  // End of method: SimpleSample.Program::Contact/SimpleSample.Program::Contact.get_Version() : int64

  .method private hidebysig newslot virtual final
          void  'SimpleSample.Program::Contact.IncrementVersion'() cil managed
  {
    .override [NSTM]NSTM.INstmVersioned::IncrementVersion
    .maxstack 1
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

  IL_0000:
    // {InstructionSequence 0 Modified, Comment=""}
    ldarg.0   
    ldfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Program/Contact:: '~composed~12'
    tail.
    callvirt   instance void [NSTM]NSTM.INstmVersioned::IncrementVersion()
    ret       
  }
  // End of method: SimpleSample.Program::Contact/SimpleSample.Program::Contact.IncrementVersion() : void

  .method private hidebysig specialname rtspecialname static
          void .cctor() cil managed
  {
    .maxstack 4
    {
      // InstructionBlock 2 [New Root Block], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
      {
        // InstructionBlock 3 [Entry Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      // InstructionBlock 4 [], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
      // InstructionBlock 5 [], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

    IL_0003:
      // {InstructionSequence 3 Modified, Comment=""}
      ldsfld     bool '~PostSharp~Laos~Implementation'::initialized
      brtrue.s   IL_0002
      call       void [PostSharp.Laos]PostSharp.Laos.LaosNotInitializedException::Throw()

    IL_0002:
      // {InstructionSequence 2 Modified, Comment=""}
      ldtoken    SimpleSample.Program/Contact
      call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      stsfld     class [mscorlib]System.Type '~PostSharp~Laos~Implementation':: '~targetType~12'
      ldsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~12'
      ldsfld     class [mscorlib]System.Type '~PostSharp~Laos~Implementation':: '~targetType~12'
      callvirt   instance void [PostSharp.Laos]PostSharp.Laos.ILaosTypeLevelAspect::RuntimeInitialize(class [mscorlib]System.Type)
      ldtoken    field class SimpleSample.Program/Address SimpleSample.Program/Contact::location
      call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
      stsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~14'
      ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~14'
      ldsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~14'
      callvirt   instance void [PostSharp.Laos]PostSharp.Laos.LaosFieldLevelAspect::RuntimeInitialize(class [mscorlib]System.Reflection.FieldInfo)
      ldtoken    field string SimpleSample.Program/Contact::name
      call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
      stsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~13'
      ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~13'
      ldsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~13'
      callvirt   instance void [PostSharp.Laos]PostSharp.Laos.LaosFieldLevelAspect::RuntimeInitialize(class [mscorlib]System.Reflection.FieldInfo)
      {
        // InstructionBlock 0 [Old Root Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0000:
        // {InstructionSequence 0 Modified, Comment=""}
        ret       
      }
    }
  }
  // End of method: SimpleSample.Program::Contact/.cctor() : void

  .method private hidebysig instance string
'~get~name'() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  string fieldValue)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      string SimpleSample.Program/Contact::name
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfGetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldnull    
        ldloc      fieldValue
        ldtoken    field string SimpleSample.Program/Contact::name
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/Contact::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~13'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnGetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_ExposedFieldValue()
        castclass  [mscorlib]System.String
        stloc      fieldValue
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldloc      fieldValue
      ret       
    }
  }
  // End of method: SimpleSample.Program::Contact/~get~name() : string

  .method family instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials
          GetInstanceCredentials() cil managed
  {
    .maxstack 1
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

  IL_0000:
    // {InstructionSequence 0 Modified, Comment=""}
    ldarg.0   
    ldfld      valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/Contact::instanceCredentials
    ret       
  }
  // End of method: SimpleSample.Program::Contact/GetInstanceCredentials() : [PostSharp.Laos]PostSharp.Laos.InstanceCredentials

  .method private hidebysig instance void
'~set~name'(string  'value') cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  string fieldValue)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      string SimpleSample.Program/Contact::name
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfSetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldarg.1   
        ldloc      fieldValue
        ldtoken    field string SimpleSample.Program/Contact::name
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/Contact::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~13'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnSetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_StoredFieldValue()
        castclass  [mscorlib]System.String
        stloc      fieldValue
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldarg.0   
      ldloc      fieldValue
      stfld      string SimpleSample.Program/Contact::name
      ret       
    }
  }
  // End of method: SimpleSample.Program::Contact/~set~name(string value) : void

  .method private hidebysig instance class SimpleSample.Program/Address
'~get~location'() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  class SimpleSample.Program/Address fieldValue)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      class SimpleSample.Program/Address SimpleSample.Program/Contact::location
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfGetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldnull    
        ldloc      fieldValue
        ldtoken    field class SimpleSample.Program/Address SimpleSample.Program/Contact::location
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/Contact::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~14'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnGetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_ExposedFieldValue()
        castclass  SimpleSample.Program/Address
        stloc      fieldValue
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldloc      fieldValue
      ret       
    }
  }
  // End of method: SimpleSample.Program::Contact/~get~location() : SimpleSample.Program::Address

  .method private hidebysig instance void
'~set~location'(class SimpleSample.Program/Address  'value') cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  class SimpleSample.Program/Address fieldValue)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      class SimpleSample.Program/Address SimpleSample.Program/Contact::location
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfSetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldarg.1   
        ldloc      fieldValue
        ldtoken    field class SimpleSample.Program/Address SimpleSample.Program/Contact::location
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/Contact::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~14'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnSetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_StoredFieldValue()
        castclass  SimpleSample.Program/Address
        stloc      fieldValue
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldarg.0   
      ldloc      fieldValue
      stfld      class SimpleSample.Program/Address SimpleSample.Program/Contact::location
      ret       
    }
  }
  // End of method: SimpleSample.Program::Contact/~set~location(SimpleSample.Program::Address value) : void

  .property instance string Name()
  {
    .get instance string SimpleSample.Program/Contact::get_Name()
    .set instance void SimpleSample.Program/Contact::set_Name(string)
  }

  .property instance class SimpleSample.Program/Address
            Location()
  {
    .set instance void SimpleSample.Program/Contact::set_Location(class SimpleSample.Program/Address)
    .get instance class SimpleSample.Program/Address SimpleSample.Program/Contact::get_Location()
  }

}
// End of type: SimpleSample.Program::Contact



.class auto ansi nested private beforefieldinit Address
      extends [mscorlib]System.Object
      implements  [NSTM]NSTM.INstmVersioned
{
  .field private string city

  .field private class [NSTM]NSTM.INstmVersioned  '~composed~15'

  .field private initonly valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials instanceCredentials

  .method public hidebysig specialname instance string
          get_City() cil managed
  {
    .maxstack 1
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-c
      .locals init ( [0]  string CS$1$0000)
      {
        // InstructionBlock 1 [Before instruction {Ldfld SimpleSample.Program::Address/city}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0002:
        // {InstructionSequence 2 Original, Range=0-2 }
        .line 97,97 : 21,22  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
        nop       
        .line 97,97 : 23,35
        ldarg.0   
      }
      {
        // InstructionBlock 3 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfGetField} at {Ldfld SimpleSample.Program::Address/city}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0004:
        // {InstructionSequence 4 Modified, Comment=""}
        call       instance string SimpleSample.Program/Address:: '~get~city'()
      }
      {
        // InstructionBlock 2 [After instruction {Ldfld SimpleSample.Program::Address/city}.], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

      IL_0003:
        // {InstructionSequence 3 Original, Range=7-a }
        stloc.0   
        br.s       IL_0001

      IL_0001:
        // {InstructionSequence 1 Original, Range=a-c }
        .line 97,97 : 36,37
        ldloc.0   
        ret       
      }
    }
  }
  // End of method: SimpleSample.Program::Address/get_City() : string

  .method public hidebysig specialname instance void
          set_City(string  'value') cil managed
  {
    .maxstack 2
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-9
    {
      // InstructionBlock 1 [Before instruction {Stfld SimpleSample.Program::Address/city}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Original, Range=0-3 }
      .line 98,98 : 21,22  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 98,98 : 23,36
      ldarg.0   
      ldarg.1   
    }
    {
      // InstructionBlock 3 [Advice: PostSharp.CodeWeaver.Weaver+FieldLevelAdvice on JoinPoint {InsteadOfSetField} at {Stfld SimpleSample.Program::Address/city}], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0003:
      // {InstructionSequence 3 Modified, Comment=""}
      call       instance void SimpleSample.Program/Address:: '~set~city'(string)
    }
    {
      // InstructionBlock 2 [After instruction {Stfld SimpleSample.Program::Address/city}.], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0002:
      // {InstructionSequence 2 Original, Range=8-9 }
      .line 98,98 : 37,38
      ret       
    }
  }
  // End of method: SimpleSample.Program::Address/set_City(string value) : void

  .method public hidebysig specialname rtspecialname
          instance void .ctor() cil managed
  {
    .maxstack 3
    {
      // InstructionBlock 3 [New Root Block], 0 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 0-0
      {
        // InstructionBlock 4 [Entry Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      {
        // InstructionBlock 2 [Initialization Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0000:
        // {InstructionSequence 0 Original, Range=0-6 }
        ldarg.0   
        call       instance void [mscorlib]System.Object::.ctor()
      }
      {
        // InstructionBlock 5 [After Initialization Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      // InstructionBlock 6 [], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
      // InstructionBlock 7 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0003:
      // {InstructionSequence 3 Modified, Comment=""}
      ldarg.0   
      ldsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~15'
      ldarg.0   
      newobj     instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::.ctor(object)
      callvirt   instance object [PostSharp.Laos]PostSharp.Laos.ICompositionAspect::CreateImplementationObject(class [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs)
      castclass  [NSTM]NSTM.INstmVersioned
      stfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Program/Address:: '~composed~15'
      {
        // InstructionBlock 1 [Protected Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0001:
        // {InstructionSequence 1 Original, Range=6-7 }
        ret       
      }
    }
  }
  // End of method: SimpleSample.Program::Address/.ctor() : void

  .method private hidebysig newslot virtual final
          int64  'SimpleSample.Program::Address.get_Version'() cil managed
  {
    .override [NSTM]NSTM.INstmVersioned::get_Version
    .maxstack 1
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

  IL_0000:
    // {InstructionSequence 0 Modified, Comment=""}
    ldarg.0   
    ldfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Program/Address:: '~composed~15'
    tail.
    callvirt   instance int64 [NSTM]NSTM.INstmVersioned::get_Version()
    ret       
  }
  // End of method: SimpleSample.Program::Address/SimpleSample.Program::Address.get_Version() : int64

  .method private hidebysig newslot virtual final
          void  'SimpleSample.Program::Address.IncrementVersion'() cil managed
  {
    .override [NSTM]NSTM.INstmVersioned::IncrementVersion
    .maxstack 1
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

  IL_0000:
    // {InstructionSequence 0 Modified, Comment=""}
    ldarg.0   
    ldfld      class [NSTM]NSTM.INstmVersioned SimpleSample.Program/Address:: '~composed~15'
    tail.
    callvirt   instance void [NSTM]NSTM.INstmVersioned::IncrementVersion()
    ret       
  }
  // End of method: SimpleSample.Program::Address/SimpleSample.Program::Address.IncrementVersion() : void

  .method private hidebysig specialname rtspecialname static
          void .cctor() cil managed
  {
    .maxstack 3
    {
      // InstructionBlock 2 [New Root Block], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
      {
        // InstructionBlock 3 [Entry Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      // InstructionBlock 4 [], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
      // InstructionBlock 5 [], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

    IL_0003:
      // {InstructionSequence 3 Modified, Comment=""}
      ldsfld     bool '~PostSharp~Laos~Implementation'::initialized
      brtrue.s   IL_0002
      call       void [PostSharp.Laos]PostSharp.Laos.LaosNotInitializedException::Throw()

    IL_0002:
      // {InstructionSequence 2 Modified, Comment=""}
      ldtoken    SimpleSample.Program/Address
      call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      stsfld     class [mscorlib]System.Type '~PostSharp~Laos~Implementation':: '~targetType~15'
      ldsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~15'
      ldsfld     class [mscorlib]System.Type '~PostSharp~Laos~Implementation':: '~targetType~15'
      callvirt   instance void [PostSharp.Laos]PostSharp.Laos.ILaosTypeLevelAspect::RuntimeInitialize(class [mscorlib]System.Type)
      ldtoken    field string SimpleSample.Program/Address::city
      call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
      stsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~16'
      ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~16'
      ldsfld     class [mscorlib]System.Reflection.FieldInfo '~PostSharp~Laos~Implementation':: '~targetField~16'
      callvirt   instance void [PostSharp.Laos]PostSharp.Laos.LaosFieldLevelAspect::RuntimeInitialize(class [mscorlib]System.Reflection.FieldInfo)
      {
        // InstructionBlock 0 [Old Root Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0000:
        // {InstructionSequence 0 Modified, Comment=""}
        ret       
      }
    }
  }
  // End of method: SimpleSample.Program::Address/.cctor() : void

  .method private hidebysig instance string
'~get~city'() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  string fieldValue)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      string SimpleSample.Program/Address::city
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfGetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldnull    
        ldloc      fieldValue
        ldtoken    field string SimpleSample.Program/Address::city
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/Address::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~16'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnGetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_ExposedFieldValue()
        castclass  [mscorlib]System.String
        stloc      fieldValue
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldloc      fieldValue
      ret       
    }
  }
  // End of method: SimpleSample.Program::Address/~get~city() : string

  .method family instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials
          GetInstanceCredentials() cil managed
  {
    .maxstack 1
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

  IL_0000:
    // {InstructionSequence 0 Modified, Comment=""}
    ldarg.0   
    ldfld      valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/Address::instanceCredentials
    ret       
  }
  // End of method: SimpleSample.Program::Address/GetInstanceCredentials() : [PostSharp.Laos]PostSharp.Laos.InstanceCredentials

  .method private hidebysig instance void
'~set~city'(string  'value') cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()
      = {}
    .maxstack 4
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
      .locals init ( [0]  string fieldValue)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      ldarg.0   
      ldfld      string SimpleSample.Program/Address::city
      stloc      fieldValue
      {
        // InstructionBlock 2 [Advice: PostSharp.Laos.Weaver.OnFieldAccessAspectWeaver on JoinPoint {InsteadOfSetField} at {}], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
        .locals init ( [1]  class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs  '~laosEventArgs~1')

      IL_0002:
        // {InstructionSequence 2 Modified, Comment=""}
        ldarg.1   
        ldloc      fieldValue
        ldtoken    field string SimpleSample.Program/Address::city
        call       class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Reflection.FieldInfo::GetFieldFromHandle(valuetype [mscorlib]System.RuntimeFieldHandle)
        ldarg.0   
        newobj     instance void [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::.ctor(object,
                                                                                            object,
                                                                                            class [mscorlib]System.Reflection.FieldInfo,
                                                                                            object)
        stloc       '~laosEventArgs~1'
        ldloc       '~laosEventArgs~1'
        ldarg.0   
        call       instance valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials SimpleSample.Program/Address::GetInstanceCredentials()
        call       instance void [PostSharp.Laos]PostSharp.Laos.InstanceBoundLaosEventArgs::set_InstanceCredentials(valuetype [PostSharp.Laos]PostSharp.Laos.InstanceCredentials)
        ldsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~16'
        ldloc       '~laosEventArgs~1'
        callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnFieldAccessAspect::OnSetValue(class [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs)
        ldloc       '~laosEventArgs~1'
        call       instance object [PostSharp.Laos]PostSharp.Laos.FieldAccessEventArgs::get_StoredFieldValue()
        castclass  [mscorlib]System.String
        stloc      fieldValue
      }
      // InstructionBlock 3 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

    IL_0001:
      // {InstructionSequence 1 Modified, Comment=""}
      ldarg.0   
      ldloc      fieldValue
      stfld      string SimpleSample.Program/Address::city
      ret       
    }
  }
  // End of method: SimpleSample.Program::Address/~set~city(string value) : void

  .property instance string City()
  {
    .get instance string SimpleSample.Program/Address::get_City()
    .set instance void SimpleSample.Program/Address::set_City(string)
  }

}
// End of type: SimpleSample.Program::Address



.class sequential ansi sealed nested private beforefieldinit MyStruct
      extends [mscorlib]System.ValueType
{
  .field public int32 j

  .method public hidebysig specialname rtspecialname
          instance void .ctor(int32  'value') cil managed
  {
    .maxstack 8
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-9

  IL_0000:
    // {InstructionSequence 0 Original, Range=0-9 }
    .line 281,281 : 13,14  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
    nop       
    .line 282,282 : 17,32
    ldarg.0   
    ldarg.1   
    stfld      int32 SimpleSample.Program/MyStruct::j
    .line 283,283 : 13,14
    ret       
  }
  // End of method: SimpleSample.Program::MyStruct/.ctor(int32 value) : void

}
// End of type: SimpleSample.Program::MyStruct



.class auto ansi nested private beforefieldinit MyClass
      extends [mscorlib]System.Object
      implements  [mscorlib]System.ICloneable
{
  .field public int32 i

  .method public hidebysig specialname rtspecialname
          instance void .ctor(int32  'value') cil managed
  {
    .maxstack 8
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-11

  IL_0000:
    // {InstructionSequence 0 Original, Range=0-11 }
    .line 290,290 : 13,38  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
    ldarg.0   
    call       instance void [mscorlib]System.Object::.ctor()
    nop       
    .line 291,291 : 13,14
    nop       
    .line 292,292 : 17,32
    ldarg.0   
    ldarg.1   
    stfld      int32 SimpleSample.Program/MyClass::i
    .line 293,293 : 13,14
    nop       
    ret       
  }
  // End of method: SimpleSample.Program::MyClass/.ctor(int32 value) : void

  .method public hidebysig newslot virtual final
          instance object Clone() cil managed
  {
    .maxstack 2
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-11
      .locals init ( [0]  object CS$1$0000)

    IL_0000:
      // {InstructionSequence 0 Original, Range=0-f }
      .line 298,298 : 13,14  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 299,299 : 17,44
      ldarg.0   
      ldfld      int32 SimpleSample.Program/MyClass::i
      newobj     instance void SimpleSample.Program/MyClass::.ctor(int32)
      stloc.0   
      br.s       IL_0001

    IL_0001:
      // {InstructionSequence 1 Original, Range=f-11 }
      .line 300,300 : 13,14
      ldloc.0   
      ret       
    }
  }
  // End of method: SimpleSample.Program::MyClass/Clone() : object

}
// End of type: SimpleSample.Program::MyClass



.class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass1'
      extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = (  01 00 00 00)
  .field public class [NSTM]NSTM.INstmObject`1<int32> o

  .method public hidebysig specialname rtspecialname
          instance void .ctor() cil managed
  {
    .maxstack 8
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-7

  IL_0000:
    // {InstructionSequence 0 Original, Range=0-7 }
    ldarg.0   
    call       instance void [mscorlib]System.Object::.ctor()
    ret       
  }
  // End of method: SimpleSample.Program::<>c__DisplayClass1/.ctor() : void

}
// End of type: SimpleSample.Program::<>c__DisplayClass1



.class auto ansi sealed nested private beforefieldinit '<>c__DisplayClass3'
      extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = (  01 00 00 00)
  .field public class SimpleSample.Program/'<>c__DisplayClass1'  '<>8__locals2'

  .field public class [mscorlib]System.Threading.AutoResetEvent are

  .method public hidebysig specialname rtspecialname
          instance void .ctor() cil managed
  {
    .maxstack 8
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-7

  IL_0000:
    // {InstructionSequence 0 Original, Range=0-7 }
    ldarg.0   
    call       instance void [mscorlib]System.Object::.ctor()
    ret       
  }
  // End of method: SimpleSample.Program::<>c__DisplayClass3/.ctor() : void

  .method public hidebysig instance void
'<MainSystemTx>b__0'(object A_1) cil managed
  {
    .maxstack 8
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-20

  IL_0000:
    // {InstructionSequence 0 Original, Range=0-20 }
    .line 264,264 : 21,22  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
    nop       
    .line 265,265 : 25,36
    ldarg.0   
    ldfld      class SimpleSample.Program/'<>c__DisplayClass1' SimpleSample.Program/'<>c__DisplayClass3':: '<>8__locals2'
    ldfld      class [NSTM]NSTM.INstmObject`1<int32> SimpleSample.Program/'<>c__DisplayClass1'::o
    ldc.i4.4  
    callvirt   instance void class [NSTM]NSTM.INstmObject`1<int32>::Write(!0)
    nop       
    .line 266,266 : 25,35
    ldarg.0   
    ldfld      class [mscorlib]System.Threading.AutoResetEvent SimpleSample.Program/'<>c__DisplayClass3'::are
    callvirt   instance bool [mscorlib]System.Threading.EventWaitHandle::Set()
    pop       
    .line 0x00feefee
    ret       
  }
  // End of method: SimpleSample.Program::<>c__DisplayClass3/<MainSystemTx>b__0(object) : void

}
// End of type: SimpleSample.Program::<>c__DisplayClass3



  .field private static class [NSTM]NSTM.NstmTransactional`1<int32> myAccount

  .field private static class [NSTM]NSTM.NstmTransactional`1<int32> yourAccount

  .method private hidebysig static void Main() cil managed
  {
    .entrypoint
    .maxstack 2
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 4 local(s), 0 handler(s), 6 child(ren), 0 sequence(s), 0-e1
      .locals init ( [0]  class SimpleSample.Program/ContactWithManyAddresses c,
                     [1]  class SimpleSample.Program/Address a,
                     [4]  bool CS$4$0000,
                     [5]  valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<class SimpleSample.Program/Address> CS$5$0001)
      // InstructionBlock 12 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-32

    IL_0000:
      // {InstructionSequence 0 Original, Range=0-32 }
      .line 104,104 : 9,10  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 105,105 : 13,73
      newobj     instance void SimpleSample.Program/ContactWithManyAddresses::.ctor()
      stloc.0   
      .line 106,106 : 13,33
      ldloc.0   
      ldstr       "John Doe"
      callvirt   instance void SimpleSample.Program/ContactWithManyAddresses::set_Name(string)
      nop       
      .line 107,107 : 13,39
      newobj     instance void SimpleSample.Program/Address::.ctor()
      stloc.1   
      .line 108,108 : 13,32
      ldloc.1   
      ldstr       "Hamburg"
      callvirt   instance void SimpleSample.Program/Address::set_City(string)
      nop       
      .line 109,109 : 13,32
      ldloc.0   
      callvirt   instance class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> SimpleSample.Program/ContactWithManyAddresses::get_Addresses()
      ldloc.1   
      callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address>::Add(!0)
      nop       
      {
        // InstructionBlock 11 [], 1 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 32-90
        .locals init ( [2]  class [NSTM]NSTM.INstmTransaction tx)
        // InstructionBlock 13 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 32-38

      IL_0001:
        // {InstructionSequence 1 Original, Range=32-38 }
        .line 111,111 : 20,71
        call       class [NSTM]NSTM.INstmTransaction [NSTM]NSTM.NstmMemory::BeginTransaction()
        stloc.2   
        .try
        {
          // InstructionBlock 7 [], 0 local(s), 1 handler(s), 0 child(ren), 1 sequence(s), 38-7e

        IL_0002:
          // {InstructionSequence 2 Original, Range=38-7e }
          .line 112,112 : 13,14
          nop       
          .line 113,113 : 17,38
          ldloc.0   
          ldstr       "Peter Doe"
          callvirt   instance void SimpleSample.Program/ContactWithManyAddresses::set_Name(string)
          nop       
          .line 114,114 : 17,48
          ldloc.0   
          callvirt   instance class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> SimpleSample.Program/ContactWithManyAddresses::get_Addresses()
          ldc.i4.0  
          callvirt   instance !0 class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address>::get_Item(int32)
          ldstr       "Berlin"
          callvirt   instance void SimpleSample.Program/Address::set_City(string)
          nop       
          .line 116,116 : 17,35
          newobj     instance void SimpleSample.Program/Address::.ctor()
          stloc.1   
          .line 117,117 : 17,35
          ldloc.1   
          ldstr       "Munich"
          callvirt   instance void SimpleSample.Program/Address::set_City(string)
          nop       
          .line 118,118 : 17,36
          ldloc.0   
          callvirt   instance class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> SimpleSample.Program/ContactWithManyAddresses::get_Addresses()
          ldloc.1   
          callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address>::Add(!0)
          nop       
          .line 119,119 : 13,14
          nop       
          .line 0x00feefee
          leave.s    IL_0006
        }
        finally
        {
          // InstructionBlock 9 [], 0 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 7e-90

        IL_0003:
          // {InstructionSequence 3 Original, Range=7e-88 }
          ldloc.2   
          ldnull    
          ceq       
          stloc.s    CS$4$0000
          ldloc.s    CS$4$0000
          brtrue.s   IL_0005

        IL_0004:
          // {InstructionSequence 4 Original, Range=88-8f }
          ldloc.2   
          callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          nop       

        IL_0005:
          // {InstructionSequence 5 Original, Range=8f-90 }
          endfinally
        }
        // InstructionBlock 14 [], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 90-90
      }
      // InstructionBlock 15 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 90-ab

    IL_0006:
      // {InstructionSequence 6 Original, Range=90-ab }
      .line 0x00feefee
      nop       
      .line 121,121 : 13,39
      ldloc.0   
      callvirt   instance string SimpleSample.Program/ContactWithManyAddresses::get_Name()
      call       void [mscorlib]System.Console::WriteLine(string)
      nop       
      .line 122,122 : 13,20
      nop       
      .line 122,122 : 35,46
      ldloc.0   
      callvirt   instance class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address> SimpleSample.Program/ContactWithManyAddresses::get_Addresses()
      callvirt   instance valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<!0> class [mscorlib]System.Collections.Generic.List`1<class SimpleSample.Program/Address>::GetEnumerator()
      stloc.s    CS$5$0001
      .try
      {
        // InstructionBlock 2 [], 0 local(s), 1 handler(s), 2 child(ren), 0 sequence(s), ab-d0
        {
          // InstructionBlock 16 [], 1 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), ab-ce
          .locals init ( [3]  class SimpleSample.Program/Address b)

        IL_0007:
          // {InstructionSequence 7 Original, Range=ab-ad }
          .line 0x00feefee
          br.s       IL_0009

        IL_0008:
          // {InstructionSequence 8 Original, Range=ad-c1 }
          .line 122,122 : 22,31
          ldloca.s   CS$5$0001
          call       instance !0 valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<class SimpleSample.Program/Address>::get_Current()
          stloc.3   
          .line 123,123 : 17,43
          ldloc.3   
          callvirt   instance string SimpleSample.Program/Address::get_City()
          call       void [mscorlib]System.Console::WriteLine(string)
          nop       

        IL_0009:
          // {InstructionSequence 9 Original, Range=c1-ce }
          .line 122,122 : 32,34
          ldloca.s   CS$5$0001
          call       instance bool valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<class SimpleSample.Program/Address>::MoveNext()
          stloc.s    CS$4$0000
          .line 0x00feefee
          ldloc.s    CS$4$0000
          brtrue.s   IL_0008
        }
        // InstructionBlock 17 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), ce-d0

      IL_000A:
        // {InstructionSequence 10 Original, Range=ce-d0 }
        leave.s    IL_000C
      }
      finally
      {
        // InstructionBlock 4 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), d0-df

      IL_000B:
        // {InstructionSequence 11 Original, Range=d0-df }
        ldloca.s   CS$5$0001
        constrained.  valuetype [mscorlib]System.Collections.Generic.List`1/Enumerator<class SimpleSample.Program/Address>
        callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        nop       
        endfinally
      }
      // InstructionBlock 5 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), df-e1

    IL_000C:
      // {InstructionSequence 12 Original, Range=df-e1 }
      .line 0x00feefee
      nop       
      .line 124,124 : 9,10
      ret       
    }
  }
  // End of method: SimpleSample.Program/Main() : void

  .method private hidebysig static void MainNestedObjects() cil managed
  {
    .maxstack 2
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 2 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-86
      .locals init ( [0]  class SimpleSample.Program/Contact c,
                     [2]  bool CS$4$0000)
      // InstructionBlock 7 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-30

    IL_0000:
      // {InstructionSequence 0 Original, Range=0-30 }
      .line 128,128 : 9,10  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 129,129 : 13,39
      newobj     instance void SimpleSample.Program/Contact::.ctor()
      stloc.0   
      .line 130,130 : 13,33
      ldloc.0   
      ldstr       "John Doe"
      callvirt   instance void SimpleSample.Program/Contact::set_Name(string)
      nop       
      .line 131,131 : 13,40
      ldloc.0   
      newobj     instance void SimpleSample.Program/Address::.ctor()
      callvirt   instance void SimpleSample.Program/Contact::set_Location(class SimpleSample.Program/Address)
      nop       
      .line 132,132 : 13,41
      ldloc.0   
      callvirt   instance class SimpleSample.Program/Address SimpleSample.Program/Contact::get_Location()
      ldstr       "Hamburg"
      callvirt   instance void SimpleSample.Program/Address::set_City(string)
      nop       
      {
        // InstructionBlock 6 [], 1 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 30-67
        .locals init ( [1]  class [NSTM]NSTM.INstmTransaction tx)
        // InstructionBlock 8 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 30-36

      IL_0001:
        // {InstructionSequence 1 Original, Range=30-36 }
        .line 134,134 : 20,71
        call       class [NSTM]NSTM.INstmTransaction [NSTM]NSTM.NstmMemory::BeginTransaction()
        stloc.1   
        .try
        {
          // InstructionBlock 2 [], 0 local(s), 1 handler(s), 0 child(ren), 1 sequence(s), 36-57

        IL_0002:
          // {InstructionSequence 2 Original, Range=36-57 }
          .line 135,135 : 13,14
          nop       
          .line 136,136 : 17,38
          ldloc.0   
          ldstr       "Peter Doe"
          callvirt   instance void SimpleSample.Program/Contact::set_Name(string)
          nop       
          .line 137,137 : 17,44
          ldloc.0   
          callvirt   instance class SimpleSample.Program/Address SimpleSample.Program/Contact::get_Location()
          ldstr       "Berlin"
          callvirt   instance void SimpleSample.Program/Address::set_City(string)
          nop       
          .line 138,138 : 13,14
          nop       
          .line 0x00feefee
          leave.s    IL_0006
        }
        finally
        {
          // InstructionBlock 4 [], 0 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 57-67

        IL_0003:
          // {InstructionSequence 3 Original, Range=57-5f }
          ldloc.1   
          ldnull    
          ceq       
          stloc.2   
          ldloc.2   
          brtrue.s   IL_0005

        IL_0004:
          // {InstructionSequence 4 Original, Range=5f-66 }
          ldloc.1   
          callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          nop       

        IL_0005:
          // {InstructionSequence 5 Original, Range=66-67 }
          endfinally
        }
        // InstructionBlock 9 [], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 67-67
      }
      // InstructionBlock 10 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 67-86

    IL_0006:
      // {InstructionSequence 6 Original, Range=67-86 }
      .line 0x00feefee
      nop       
      .line 140,140 : 13,39
      ldloc.0   
      callvirt   instance string SimpleSample.Program/Contact::get_Name()
      call       void [mscorlib]System.Console::WriteLine(string)
      nop       
      .line 141,141 : 13,48
      ldloc.0   
      callvirt   instance class SimpleSample.Program/Address SimpleSample.Program/Contact::get_Location()
      callvirt   instance string SimpleSample.Program/Address::get_City()
      call       void [mscorlib]System.Console::WriteLine(string)
      nop       
      .line 142,142 : 9,10
      ret       
    }
  }
  // End of method: SimpleSample.Program/MainNestedObjects() : void

  .method private hidebysig static void MainNstmTx() cil managed
  {
    .maxstack 2
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 0-7a
    // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-1f

  IL_0000:
    // {InstructionSequence 0 Original, Range=0-1f }
    .line 148,148 : 9,10  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
    nop       
    .line 149,149 : 13,30
    ldc.i4     0x3e8
    call       class [NSTM]NSTM.NstmTransactional`1<!0> class [NSTM]NSTM.NstmTransactional`1<int32>::op_Implicit(!0)
    stsfld     class [NSTM]NSTM.NstmTransactional`1<int32> SimpleSample.Program::myAccount
    .line 150,150 : 13,31
    ldc.i4     0x1f4
    call       class [NSTM]NSTM.NstmTransactional`1<!0> class [NSTM]NSTM.NstmTransactional`1<int32>::op_Implicit(!0)
    stsfld     class [NSTM]NSTM.NstmTransactional`1<int32> SimpleSample.Program::yourAccount
    .try
    {
      // InstructionBlock 2 [], 0 local(s), 1 handler(s), 0 child(ren), 1 sequence(s), 1f-2e

    IL_0001:
      // {InstructionSequence 1 Original, Range=1f-2e }
      .line 153,153 : 13,14
      nop       
      .line 154,154 : 17,37
      ldc.i4     0x3e9
      call       void SimpleSample.Program::TransferMoney(int32)
      nop       
      .line 155,155 : 13,14
      nop       
      .line 0x00feefee
      leave.s    IL_0003
    }
    catch [mscorlib]System.Exception
    {
      // InstructionBlock 4 [], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 2e-44
      .locals init ( [0]  class [mscorlib]System.Exception ex)

    IL_0002:
      // {InstructionSequence 2 Original, Range=2e-44 }
      .line 156,156 : 13,33
      stloc.0   
      .line 157,157 : 13,14
      nop       
      .line 158,158 : 17,58
      ldstr       "*** {0}"
      ldloc.0   
      callvirt   instance string [mscorlib]System.Exception::get_Message()
      call       void [mscorlib]System.Console::WriteLine(string,
                                                          object)
      nop       
      .line 159,159 : 13,14
      nop       
      .line 0x00feefee
      leave.s    IL_0003
    }
    // InstructionBlock 5 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 44-7a

  IL_0003:
    // {InstructionSequence 3 Original, Range=44-7a }
    .line 0x00feefee
    nop       
    .line 161,161 : 13,67
    ldstr       "my account: {0}"
    ldsfld     class [NSTM]NSTM.NstmTransactional`1<int32> SimpleSample.Program::myAccount
    callvirt   instance !0 class [NSTM]NSTM.NstmTransactional`1<int32>::get_Value()
    box        [mscorlib]System.Int32
    call       void [mscorlib]System.Console::WriteLine(string,
                                                        object)
    nop       
    .line 162,162 : 13,71
    ldstr       "your account: {0}"
    ldsfld     class [NSTM]NSTM.NstmTransactional`1<int32> SimpleSample.Program::yourAccount
    callvirt   instance !0 class [NSTM]NSTM.NstmTransactional`1<int32>::get_Value()
    box        [mscorlib]System.Int32
    call       void [mscorlib]System.Console::WriteLine(string,
                                                        object)
    nop       
    .line 163,163 : 9,10
    ret       
  }
  // End of method: SimpleSample.Program/MainNstmTx() : void

  .method private hidebysig static void TransferMoney(int32 amountToTransfer) cil managed
  {
    .maxstack 6
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 3 [New Root Block], 3 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 0-0
      .locals init ( [1]  class [mscorlib]System.Exception  '~exception~1',
                     [2]  object[]  '~arguments~2',
                     [3]  class [PostSharp.Laos]PostSharp.Laos.MethodExecutionEventArgs  '~laosEventArgs~3')
      {
        // InstructionBlock 2 [Initial Symbol Sequence Point Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0000:
        // {InstructionSequence 0 Original, Range=0-1 }
        .line 168,168 : 9,10  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
        nop       
      }
      {
        // InstructionBlock 4 [Entry Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      {
        // InstructionBlock 13 [Protected Group], 1 local(s), 0 handler(s), 1 child(ren), 0 sequence(s), 0-0
        .locals init ( [0]  bool CS$4$0000)
        {
          // InstructionBlock 11 [Block with Leave], 0 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
          .try
          {
            // InstructionBlock 14 [Try-Finally Block], 0 local(s), 1 handler(s), 2 child(ren), 0 sequence(s), 0-0
            .try
            {
              // InstructionBlock 5 [], 0 local(s), 1 handler(s), 3 child(ren), 0 sequence(s), 0-0
              // InstructionBlock 6 [], 0 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 0-0

            IL_0006:
              // {InstructionSequence 6 Modified, Comment=""}
              .line 0x00feefee
              ldtoken    method void SimpleSample.Program::TransferMoney(int32)
              ldtoken    SimpleSample.Program
              call       class [mscorlib]System.Reflection.MethodBase [mscorlib]System.Reflection.MethodBase::GetMethodFromHandle(valuetype [mscorlib]System.RuntimeMethodHandle,
                                                                                                                                  valuetype [mscorlib]System.RuntimeTypeHandle)
              ldnull    
              ldc.i4     0x1
              newarr     [mscorlib]System.Object
              dup       
              ldc.i4     0x0
              ldarg      amountToTransfer
              box        [mscorlib]System.Int32
              stelem.ref
              stloc       '~arguments~2'
              ldloc       '~arguments~2'
              newobj     instance void [PostSharp.Laos]PostSharp.Laos.MethodExecutionEventArgs::.ctor(class [mscorlib]System.Reflection.MethodBase,
                                                                                                      object,
                                                                                                      object[] )
              stloc       '~laosEventArgs~3'
              ldsfld     class [NSTM]NSTM.NstmAtomicAttribute '~PostSharp~Laos~Implementation':: '~aspect~5'
              ldloc       '~laosEventArgs~3'
              callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnMethodBoundaryAspect::OnEntry(class [PostSharp.Laos]PostSharp.Laos.MethodExecutionEventArgs)
              ldloc       '~laosEventArgs~3'
              call       instance valuetype [PostSharp.Laos]PostSharp.Laos.FlowBehavior [PostSharp.Laos]PostSharp.Laos.MethodExecutionEventArgs::get_FlowBehavior()
              ldc.i4     0x3
              bne.un.s   IL_0008

            IL_0007:
              // {InstructionSequence 7 Modified, Comment=""}
              leave      IL_0005

            IL_0008:
              // {InstructionSequence 8 Not Commited, Comment=""}
              {
                // InstructionBlock 0 [Old Root Block], 0 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 0-47

              IL_0003:
                // {InstructionSequence 3 Original, Range=1-3b }
                .line 169,169 : 13,49
                ldsfld     class [NSTM]NSTM.NstmTransactional`1<int32> SimpleSample.Program::myAccount
                dup       
                callvirt   instance !0 class [NSTM]NSTM.NstmTransactional`1<int32>::get_Value()
                ldarg.0   
                sub       
                callvirt   instance void class [NSTM]NSTM.NstmTransactional`1<int32>::set_Value(!0)
                nop       
                .line 170,170 : 13,51
                ldsfld     class [NSTM]NSTM.NstmTransactional`1<int32> SimpleSample.Program::yourAccount
                dup       
                callvirt   instance !0 class [NSTM]NSTM.NstmTransactional`1<int32>::get_Value()
                ldarg.0   
                add       
                callvirt   instance void class [NSTM]NSTM.NstmTransactional`1<int32>::set_Value(!0)
                nop       
                .line 172,172 : 13,31
                ldsfld     class [NSTM]NSTM.NstmTransactional`1<int32> SimpleSample.Program::myAccount
                call       !0 class [NSTM]NSTM.NstmTransactional`1<int32>::op_Implicit(class [NSTM]NSTM.NstmTransactional`1<!0>)
                ldc.i4.0  
                clt       
                ldc.i4.0  
                ceq       
                stloc.0   
                .line 0x00feefee
                ldloc.0   
                brtrue.s   IL_0002

              IL_0001:
                // {InstructionSequence 1 Original, Range=3b-46 }
                .line 173,173 : 17,73
                ldstr       "No overdraft allowed!"
                newobj     instance void [mscorlib]System.ApplicationException::.ctor(string)
                throw     

              IL_0002:
                // {InstructionSequence 2 Modified, Comment=""}
                br.s       IL_0004 /* Initial Return Branch Target */ 
              }
              {
                // InstructionBlock 7 [On Success Block], 0 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-0
                {
                  // InstructionBlock 8 [On Success Label Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

                IL_0004:
                  // {InstructionSequence 4 Not Commited, Comment="Initial Return Branch Target"}
                }
                {
                  // InstructionBlock 9 [On Success User Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

                IL_0009:
                  // {InstructionSequence 9 Modified, Comment=""}
                  .line 0x00feefee
                  ldsfld     class [NSTM]NSTM.NstmAtomicAttribute '~PostSharp~Laos~Implementation':: '~aspect~5'
                  ldloc       '~laosEventArgs~3'
                  callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnMethodBoundaryAspect::OnSuccess(class [PostSharp.Laos]PostSharp.Laos.MethodExecutionEventArgs)
                }
                {
                  // InstructionBlock 10 [On Success Leave Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

                IL_000A:
                  // {InstructionSequence 10 Modified, Comment=""}
                  .line 0x00feefee
                  leave.s    IL_0005
                }
              }
            }
            catch [mscorlib]System.Exception
            {
              // InstructionBlock 18 [Catch Block #0], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
              {
                // InstructionBlock 19 [User Catch Block #0], 0 local(s), 0 handler(s), 0 child(ren), 4 sequence(s), 0-0

              IL_000D:
                // {InstructionSequence 13 Modified, Comment=""}
                .line 0x00feefee
                stloc       '~exception~1'
                ldloc       '~laosEventArgs~3'
                ldloc       '~exception~1'
                call       instance void [PostSharp.Laos]PostSharp.Laos.MethodExecutionEventArgs::set_Exception(class [mscorlib]System.Exception)
                ldsfld     class [NSTM]NSTM.NstmAtomicAttribute '~PostSharp~Laos~Implementation':: '~aspect~5'
                ldloc       '~laosEventArgs~3'
                callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IExceptionHandlerAspect::OnException(class [PostSharp.Laos]PostSharp.Laos.MethodExecutionEventArgs)
                ldloc       '~laosEventArgs~3'
                call       instance valuetype [PostSharp.Laos]PostSharp.Laos.FlowBehavior [PostSharp.Laos]PostSharp.Laos.MethodExecutionEventArgs::get_FlowBehavior()
                switch    (
                           IL_000E,
                           IL_0010,
                           IL_000E,
                           IL_000F)

              IL_000E:
                // {InstructionSequence 14 Modified, Comment=""}
                rethrow   

              IL_000F:
                // {InstructionSequence 15 Modified, Comment=""}
                leave.s    IL_0005

              IL_0010:
                // {InstructionSequence 16 Not Commited, Comment=""}
              }
              {
                // InstructionBlock 20 [Leave Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

              IL_000C:
                // {InstructionSequence 12 Modified, Comment=""}
                .line 0x00feefee
                leave.s    IL_0005
              }
            }
          }
          finally
          {
            // InstructionBlock 15 [System Finally Block], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
            {
              // InstructionBlock 16 [User Finally Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

            IL_0011:
              // {InstructionSequence 17 Modified, Comment=""}
              .line 0x00feefee
              ldsfld     class [NSTM]NSTM.NstmAtomicAttribute '~PostSharp~Laos~Implementation':: '~aspect~5'
              ldloc       '~laosEventArgs~3'
              callvirt   instance void [PostSharp.Laos]PostSharp.Laos.IOnMethodBoundaryAspect::OnExit(class [PostSharp.Laos]PostSharp.Laos.MethodExecutionEventArgs)
            }
            {
              // InstructionBlock 17 [End Finally Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

            IL_000B:
              // {InstructionSequence 11 Modified, Comment=""}
              .line 0x00feefee
              endfinally
            }
          }
          // InstructionBlock 12 [], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
        }
      }
      {
        // InstructionBlock 21 [Return Block], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

      IL_0005:
        // {InstructionSequence 5 Modified, Comment=""}
        ret       

      IL_0012:
        // {InstructionSequence 18 Not Commited, Comment=""}
      }
    }
  }
  // End of method: SimpleSample.Program/TransferMoney(int32 amountToTransfer) : void

  .method private hidebysig static void MainSystemTx() cil managed
  {
    .maxstack 3
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 2 local(s), 0 handler(s), 7 child(ren), 0 sequence(s), 0-137
      .locals init ( [3]  class SimpleSample.Program/'<>c__DisplayClass1'  '<>8__locals2',
                     [4]  bool CS$4$0000,
                     // Variables with missing symbol or without reference.
                     [2] class SimpleSample.Program/'<>c__DisplayClass3' V_2 /* reference without symbol */ )
      // InstructionBlock 22 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-1a

    IL_0000:
      // {InstructionSequence 0 Original, Range=0-1a }
      .line 0x00feefee
      newobj     instance void SimpleSample.Program/'<>c__DisplayClass1'::.ctor()
      stloc.3   
      .line 235,235 : 9,10  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 236,236 : 13,91
      ldc.i4.2  
      call       void [NSTM]NSTM.NstmMemory::set_SystemTransactionsMode(valuetype [NSTM]NSTM.NstmSystemTransactionsMode)
      nop       
      .line 238,238 : 13,66
      ldloc.3   
      ldc.i4.1  
      call       class [NSTM]NSTM.INstmObject`1<!!0> [NSTM]NSTM.NstmMemory::CreateObject<int32>(!!0)
      stfld      class [NSTM]NSTM.INstmObject`1<int32> SimpleSample.Program/'<>c__DisplayClass1'::o
      {
        // InstructionBlock 21 [], 1 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 1a-4a
        .locals init ( [0]  class [System.Transactions]System.Transactions.TransactionScope tx)
        // InstructionBlock 23 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 1a-20

      IL_0001:
        // {InstructionSequence 1 Original, Range=1a-20 }
        .line 239,239 : 20,64
        newobj     instance void [System.Transactions]System.Transactions.TransactionScope::.ctor()
        stloc.0   
        .try
        {
          // InstructionBlock 17 [], 0 local(s), 1 handler(s), 0 child(ren), 1 sequence(s), 20-38

        IL_0002:
          // {InstructionSequence 2 Original, Range=20-38 }
          .line 240,240 : 13,14
          nop       
          .line 241,241 : 17,28
          ldloc.3   
          ldfld      class [NSTM]NSTM.INstmObject`1<int32> SimpleSample.Program/'<>c__DisplayClass1'::o
          ldc.i4.2  
          callvirt   instance void class [NSTM]NSTM.INstmObject`1<int32>::Write(!0)
          nop       
          .line 242,242 : 17,31
          ldloc.0   
          callvirt   instance void [System.Transactions]System.Transactions.TransactionScope::Complete()
          nop       
          .line 243,243 : 13,14
          nop       
          .line 0x00feefee
          leave.s    IL_0006
        }
        finally
        {
          // InstructionBlock 19 [], 0 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 38-4a

        IL_0003:
          // {InstructionSequence 3 Original, Range=38-42 }
          ldloc.0   
          ldnull    
          ceq       
          stloc.s    CS$4$0000
          ldloc.s    CS$4$0000
          brtrue.s   IL_0005

        IL_0004:
          // {InstructionSequence 4 Original, Range=42-49 }
          ldloc.0   
          callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          nop       

        IL_0005:
          // {InstructionSequence 5 Original, Range=49-4a }
          endfinally
        }
        // InstructionBlock 24 [], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 4a-4a
      }
      // InstructionBlock 27 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 4a-62

    IL_0006:
      // {InstructionSequence 6 Original, Range=4a-62 }
      .line 0x00feefee
      nop       
      .line 244,244 : 13,41
      ldloc.3   
      ldfld      class [NSTM]NSTM.INstmObject`1<int32> SimpleSample.Program/'<>c__DisplayClass1'::o
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<int32>::Read()
      call       void [mscorlib]System.Console::WriteLine(int32)
      nop       
      .line 246,246 : 13,101
      ldc.i4.1  
      call       void [NSTM]NSTM.NstmMemory::set_SystemTransactionsMode(valuetype [NSTM]NSTM.NstmSystemTransactionsMode)
      {
        // InstructionBlock 26 [], 1 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 62-b7
        .locals init ( [0]  class [System.Transactions]System.Transactions.TransactionScope tx)
        // InstructionBlock 28 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 62-69

      IL_0007:
        // {InstructionSequence 7 Original, Range=62-69 }
        nop       
        .line 247,247 : 20,64
        newobj     instance void [System.Transactions]System.Transactions.TransactionScope::.ctor()
        stloc.0   
        .try
        {
          // InstructionBlock 7 [], 0 local(s), 1 handler(s), 3 child(ren), 0 sequence(s), 69-a5
          // InstructionBlock 32 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 69-6a

        IL_0008:
          // {InstructionSequence 8 Original, Range=69-6a }
          .line 248,248 : 13,14
          nop       
          {
            // InstructionBlock 31 [], 1 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 6a-9a
            .locals init ( [1]  class [NSTM]NSTM.INstmTransaction txNSTM)
            // InstructionBlock 33 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 6a-70

          IL_0009:
            // {InstructionSequence 9 Original, Range=6a-70 }
            .line 249,249 : 24,79
            call       class [NSTM]NSTM.INstmTransaction [NSTM]NSTM.NstmMemory::BeginTransaction()
            stloc.1   
            .try
            {
              // InstructionBlock 12 [], 0 local(s), 1 handler(s), 0 child(ren), 1 sequence(s), 70-88

            IL_000A:
              // {InstructionSequence 10 Original, Range=70-88 }
              .line 250,250 : 17,18
              nop       
              .line 251,251 : 21,32
              ldloc.3   
              ldfld      class [NSTM]NSTM.INstmObject`1<int32> SimpleSample.Program/'<>c__DisplayClass1'::o
              ldc.i4.3  
              callvirt   instance void class [NSTM]NSTM.INstmObject`1<int32>::Write(!0)
              nop       
              .line 252,252 : 21,37
              ldloc.1   
              callvirt   instance void [NSTM]NSTM.INstmTransaction::Commit()
              nop       
              .line 253,253 : 17,18
              nop       
              .line 0x00feefee
              leave.s    IL_000E
            }
            finally
            {
              // InstructionBlock 14 [], 0 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 88-9a

            IL_000B:
              // {InstructionSequence 11 Original, Range=88-92 }
              ldloc.1   
              ldnull    
              ceq       
              stloc.s    CS$4$0000
              ldloc.s    CS$4$0000
              brtrue.s   IL_000D

            IL_000C:
              // {InstructionSequence 12 Original, Range=92-99 }
              ldloc.1   
              callvirt   instance void [mscorlib]System.IDisposable::Dispose()
              nop       

            IL_000D:
              // {InstructionSequence 13 Original, Range=99-9a }
              endfinally
            }
            // InstructionBlock 34 [], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 9a-9a
          }
          // InstructionBlock 35 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 9a-a5

        IL_000E:
          // {InstructionSequence 14 Original, Range=9a-a5 }
          .line 0x00feefee
          nop       
          .line 254,254 : 17,31
          ldloc.0   
          callvirt   instance void [System.Transactions]System.Transactions.TransactionScope::Complete()
          nop       
          .line 255,255 : 13,14
          nop       
          .line 0x00feefee
          leave.s    IL_0012
        }
        finally
        {
          // InstructionBlock 9 [], 0 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), a5-b7

        IL_000F:
          // {InstructionSequence 15 Original, Range=a5-af }
          ldloc.0   
          ldnull    
          ceq       
          stloc.s    CS$4$0000
          ldloc.s    CS$4$0000
          brtrue.s   IL_0011

        IL_0010:
          // {InstructionSequence 16 Original, Range=af-b6 }
          ldloc.0   
          callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          nop       

        IL_0011:
          // {InstructionSequence 17 Original, Range=b6-b7 }
          endfinally
        }
        // InstructionBlock 29 [], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), b7-b7
      }
      // InstructionBlock 37 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), b7-cf

    IL_0012:
      // {InstructionSequence 18 Original, Range=b7-cf }
      .line 0x00feefee
      nop       
      .line 256,256 : 13,41
      ldloc.3   
      ldfld      class [NSTM]NSTM.INstmObject`1<int32> SimpleSample.Program/'<>c__DisplayClass1'::o
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<int32>::Read()
      call       void [mscorlib]System.Console::WriteLine(int32)
      nop       
      .line 258,258 : 13,91
      ldc.i4.2  
      call       void [NSTM]NSTM.NstmMemory::set_SystemTransactionsMode(valuetype [NSTM]NSTM.NstmSystemTransactionsMode)
      {
        // InstructionBlock 36 [], 1 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), cf-123
        .locals init ( [0]  class [System.Transactions]System.Transactions.TransactionScope tx)
        // InstructionBlock 38 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), cf-d6

      IL_0013:
        // {InstructionSequence 19 Original, Range=cf-d6 }
        nop       
        .line 259,259 : 20,64
        newobj     instance void [System.Transactions]System.Transactions.TransactionScope::.ctor()
        stloc.0   
        .try
        {
          // InstructionBlock 2 [], 0 local(s), 1 handler(s), 2 child(ren), 0 sequence(s), d6-111
          // InstructionBlock 41 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), d6-e3

        IL_0014:
          // {InstructionSequence 20 Original, Range=d6-e3 }
          .line 0x00feefee
          newobj     instance void SimpleSample.Program/'<>c__DisplayClass3'::.ctor()
          stloc.2   
          ldloc.2   
          ldloc.3   
          stfld      class SimpleSample.Program/'<>c__DisplayClass1' SimpleSample.Program/'<>c__DisplayClass3':: '<>8__locals2'
          {
            // InstructionBlock 42 [], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), e3-111
            .locals init ( [2]  class SimpleSample.Program/'<>c__DisplayClass3'  '<>8__locals4')

          IL_0015:
            // {InstructionSequence 21 Original, Range=e3-111 }
            .line 260,260 : 13,14
            nop       
            .line 261,261 : 17,98
            ldloc.2   
            ldc.i4.0  
            newobj     instance void [mscorlib]System.Threading.AutoResetEvent::.ctor(bool)
            stfld      class [mscorlib]System.Threading.AutoResetEvent SimpleSample.Program/'<>c__DisplayClass3'::are
            .line 262,263 : 17,29
            ldloc.2   
            ldftn      instance void SimpleSample.Program/'<>c__DisplayClass3':: '<MainSystemTx>b__0'(object)
            newobj     instance void [mscorlib]System.Threading.WaitCallback::.ctor(object,
                                                                                    native int)
            call       bool [mscorlib]System.Threading.ThreadPool::QueueUserWorkItem(class [mscorlib]System.Threading.WaitCallback)
            pop       
            .line 269,269 : 17,31
            ldloc.2   
            ldfld      class [mscorlib]System.Threading.AutoResetEvent SimpleSample.Program/'<>c__DisplayClass3'::are
            callvirt   instance bool [mscorlib]System.Threading.WaitHandle::WaitOne()
            pop       
            .line 271,271 : 13,14
            nop       
            .line 0x00feefee
            leave.s    IL_0019
          }
        }
        finally
        {
          // InstructionBlock 4 [], 0 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 111-123

        IL_0016:
          // {InstructionSequence 22 Original, Range=111-11b }
          ldloc.0   
          ldnull    
          ceq       
          stloc.s    CS$4$0000
          ldloc.s    CS$4$0000
          brtrue.s   IL_0018

        IL_0017:
          // {InstructionSequence 23 Original, Range=11b-122 }
          ldloc.0   
          callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          nop       

        IL_0018:
          // {InstructionSequence 24 Original, Range=122-123 }
          endfinally
        }
        // InstructionBlock 39 [], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 123-123
      }
      // InstructionBlock 40 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 123-137

    IL_0019:
      // {InstructionSequence 25 Original, Range=123-137 }
      .line 0x00feefee
      nop       
      .line 272,272 : 13,41
      ldloc.3   
      ldfld      class [NSTM]NSTM.INstmObject`1<int32> SimpleSample.Program/'<>c__DisplayClass1'::o
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<int32>::Read()
      call       void [mscorlib]System.Console::WriteLine(int32)
      nop       
      .line 273,273 : 9,10
      nop       
      ret       
    }
  }
  // End of method: SimpleSample.Program/MainSystemTx() : void

  .method private hidebysig static void MainTypes() cil managed
  {
    .maxstack 3
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 5 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-b7
      .locals init ( [0]  class [NSTM]NSTM.INstmObject`1<int32> i,
                     [1]  class [NSTM]NSTM.INstmObject`1<string> s,
                     [2]  class [NSTM]NSTM.INstmObject`1<valuetype SimpleSample.Program/MyStruct> r,
                     [3]  class [NSTM]NSTM.INstmObject`1<class SimpleSample.Program/MyClass> c,
                     [5]  bool CS$4$0000)
      // InstructionBlock 7 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-2b

    IL_0000:
      // {InstructionSequence 0 Original, Range=0-2b }
      .line 308,308 : 9,10  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 314,314 : 13,49
      ldc.i4.1  
      call       class [NSTM]NSTM.INstmObject`1<!!0> [NSTM]NSTM.NstmMemory::CreateObject<int32>(!!0)
      stloc.0   
      .line 315,315 : 13,58
      ldstr       "hello"
      call       class [NSTM]NSTM.INstmObject`1<!!0> [NSTM]NSTM.NstmMemory::CreateObject<string>(!!0)
      stloc.1   
      .line 316,316 : 13,68
      ldc.i4.2  
      newobj     instance void SimpleSample.Program/MyStruct::.ctor(int32)
      call       class [NSTM]NSTM.INstmObject`1<!!0> [NSTM]NSTM.NstmMemory::CreateObject<valuetype SimpleSample.Program/MyStruct>(!!0)
      stloc.2   
      .line 317,317 : 13,66
      ldc.i4.3  
      newobj     instance void SimpleSample.Program/MyClass::.ctor(int32)
      call       class [NSTM]NSTM.INstmObject`1<!!0> [NSTM]NSTM.NstmMemory::CreateObject<class SimpleSample.Program/MyClass>(!!0)
      stloc.3   
      {
        // InstructionBlock 6 [], 1 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 2b-7b
        .locals init ( [4]  class [NSTM]NSTM.INstmTransaction tx)
        // InstructionBlock 8 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 2b-32

      IL_0001:
        // {InstructionSequence 1 Original, Range=2b-32 }
        .line 319,319 : 20,71
        call       class [NSTM]NSTM.INstmTransaction [NSTM]NSTM.NstmMemory::BeginTransaction()
        stloc.s    tx
        .try
        {
          // InstructionBlock 2 [], 0 local(s), 1 handler(s), 0 child(ren), 1 sequence(s), 32-67

        IL_0002:
          // {InstructionSequence 2 Original, Range=32-67 }
          .line 320,320 : 13,14
          nop       
          .line 321,321 : 17,29
          ldloc.0   
          ldc.i4.s   10
          callvirt   instance void class [NSTM]NSTM.INstmObject`1<int32>::Write(!0)
          nop       
          .line 322,322 : 17,35
          ldloc.1   
          ldstr       "world!"
          callvirt   instance void class [NSTM]NSTM.INstmObject`1<string>::Write(!0)
          nop       
          .line 323,323 : 17,43
          ldloc.2   
          ldc.i4.s   20
          newobj     instance void SimpleSample.Program/MyStruct::.ctor(int32)
          callvirt   instance void class [NSTM]NSTM.INstmObject`1<valuetype SimpleSample.Program/MyStruct>::Write(!0)
          nop       
          .line 324,324 : 17,42
          ldloc.3   
          ldc.i4.s   30
          newobj     instance void SimpleSample.Program/MyClass::.ctor(int32)
          callvirt   instance void class [NSTM]NSTM.INstmObject`1<class SimpleSample.Program/MyClass>::Write(!0)
          nop       
          .line 325,325 : 13,14
          nop       
          .line 0x00feefee
          leave.s    IL_0006
        }
        finally
        {
          // InstructionBlock 4 [], 0 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 67-7b

        IL_0003:
          // {InstructionSequence 3 Original, Range=67-72 }
          ldloc.s    tx
          ldnull    
          ceq       
          stloc.s    CS$4$0000
          ldloc.s    CS$4$0000
          brtrue.s   IL_0005

        IL_0004:
          // {InstructionSequence 4 Original, Range=72-7a }
          ldloc.s    tx
          callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          nop       

        IL_0005:
          // {InstructionSequence 5 Original, Range=7a-7b }
          endfinally
        }
        // InstructionBlock 9 [], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 7b-7b
      }
      // InstructionBlock 10 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 7b-b7

    IL_0006:
      // {InstructionSequence 6 Original, Range=7b-b7 }
      .line 0x00feefee
      nop       
      .line 327,327 : 13,41
      ldloc.0   
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<int32>::Read()
      call       void [mscorlib]System.Console::WriteLine(int32)
      nop       
      .line 328,328 : 13,41
      ldloc.1   
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<string>::Read()
      call       void [mscorlib]System.Console::WriteLine(string)
      nop       
      .line 329,329 : 13,43
      ldloc.2   
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<valuetype SimpleSample.Program/MyStruct>::Read()
      ldfld      int32 SimpleSample.Program/MyStruct::j
      call       void [mscorlib]System.Console::WriteLine(int32)
      nop       
      .line 330,330 : 13,43
      ldloc.3   
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<class SimpleSample.Program/MyClass>::Read()
      ldfld      int32 SimpleSample.Program/MyClass::i
      call       void [mscorlib]System.Console::WriteLine(int32)
      nop       
      .line 331,331 : 9,10
      ret       
    }
  }
  // End of method: SimpleSample.Program/MainTypes() : void

  .method private hidebysig static void MainSysTx(string[] args) cil managed
  {
    .maxstack 3
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 3 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-9f
      .locals init ( [0]  class [NSTM]NSTM.INstmObject`1<float64> myAccount,
                     [1]  class [NSTM]NSTM.INstmObject`1<float64> yourAccount,
                     [4]  bool CS$4$0000)
      // InstructionBlock 7 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-26

    IL_0000:
      // {InstructionSequence 0 Original, Range=0-26 }
      .line 335,335 : 9,10  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 339,339 : 13,63
      ldc.r8     1000.
      call       class [NSTM]NSTM.INstmObject`1<!!0> [NSTM]NSTM.NstmMemory::CreateObject<float64>(!!0)
      stloc.0   
      .line 340,340 : 13,64
      ldc.r8     500.
      call       class [NSTM]NSTM.INstmObject`1<!!0> [NSTM]NSTM.NstmMemory::CreateObject<float64>(!!0)
      stloc.1   
      .line 342,342 : 13,91
      ldc.i4.2  
      call       void [NSTM]NSTM.NstmMemory::set_SystemTransactionsMode(valuetype [NSTM]NSTM.NstmSystemTransactionsMode)
      nop       
      {
        // InstructionBlock 6 [], 1 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 26-71
        .locals init ( [2]  class [System.Transactions]System.Transactions.TransactionScope tx)
        // InstructionBlock 8 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 26-2c

      IL_0001:
        // {InstructionSequence 1 Original, Range=26-2c }
        .line 343,343 : 20,64
        newobj     instance void [System.Transactions]System.Transactions.TransactionScope::.ctor()
        stloc.2   
        .try
        {
          // InstructionBlock 2 [], 0 local(s), 1 handler(s), 2 child(ren), 0 sequence(s), 2c-5f
          {
            // InstructionBlock 11 [], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 2c-5d
            .locals init ( [3]  float64 amountToTransfer)

          IL_0002:
            // {InstructionSequence 2 Original, Range=2c-5d }
            .line 344,344 : 13,14
            nop       
            .line 345,345 : 17,47
            ldc.r8     150.
            stloc.3   
            .line 347,347 : 17,70
            ldloc.0   
            ldloc.0   
            callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<float64>::Read()
            ldloc.3   
            sub       
            callvirt   instance void class [NSTM]NSTM.INstmObject`1<float64>::Write(!0)
            nop       
            .line 348,348 : 17,74
            ldloc.1   
            ldloc.1   
            callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<float64>::Read()
            ldloc.3   
            add       
            callvirt   instance void class [NSTM]NSTM.INstmObject`1<float64>::Write(!0)
            nop       
            .line 350,350 : 17,31
            ldloc.2   
            callvirt   instance void [System.Transactions]System.Transactions.TransactionScope::Complete()
            nop       
            .line 351,351 : 13,14
            nop       
          }
          // InstructionBlock 12 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 5d-5f

        IL_0003:
          // {InstructionSequence 3 Original, Range=5d-5f }
          .line 0x00feefee
          leave.s    IL_0007
        }
        finally
        {
          // InstructionBlock 4 [], 0 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 5f-71

        IL_0004:
          // {InstructionSequence 4 Original, Range=5f-69 }
          ldloc.2   
          ldnull    
          ceq       
          stloc.s    CS$4$0000
          ldloc.s    CS$4$0000
          brtrue.s   IL_0006

        IL_0005:
          // {InstructionSequence 5 Original, Range=69-70 }
          ldloc.2   
          callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          nop       

        IL_0006:
          // {InstructionSequence 6 Original, Range=70-71 }
          endfinally
        }
        // InstructionBlock 9 [], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 71-71
      }
      // InstructionBlock 10 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 71-9f

    IL_0007:
      // {InstructionSequence 7 Original, Range=71-9f }
      .line 0x00feefee
      nop       
      .line 353,353 : 13,76
      ldstr       "My account balance: {0}"
      ldloc.0   
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<float64>::Read()
      box        [mscorlib]System.Double
      call       void [mscorlib]System.Console::WriteLine(string,
                                                          object)
      nop       
      .line 354,354 : 13,80
      ldstr       "Your account balance: {0}"
      ldloc.1   
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<float64>::Read()
      box        [mscorlib]System.Double
      call       void [mscorlib]System.Console::WriteLine(string,
                                                          object)
      nop       
      .line 355,355 : 9,10
      ret       
    }
  }
  // End of method: SimpleSample.Program/MainSysTx(string[] args) : void

  .method private hidebysig static void MainException(string[] args) cil managed
  {
    .maxstack 3
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 3 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 0-a3
      .locals init ( [0]  class [NSTM]NSTM.INstmObject`1<float64> myAccount,
                     [1]  class [NSTM]NSTM.INstmObject`1<float64> yourAccount,
                     [5]  bool CS$4$0000)
      // InstructionBlock 1 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-1f

    IL_0000:
      // {InstructionSequence 0 Original, Range=0-1f }
      .line 359,359 : 9,10  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 363,363 : 13,63
      ldc.r8     1000.
      call       class [NSTM]NSTM.INstmObject`1<!!0> [NSTM]NSTM.NstmMemory::CreateObject<float64>(!!0)
      stloc.0   
      .line 364,364 : 13,64
      ldc.r8     500.
      call       class [NSTM]NSTM.INstmObject`1<!!0> [NSTM]NSTM.NstmMemory::CreateObject<float64>(!!0)
      stloc.1   
      .try
      {
        // InstructionBlock 2 [], 0 local(s), 1 handler(s), 2 child(ren), 0 sequence(s), 1f-5d
        // InstructionBlock 10 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 1f-20

      IL_0001:
        // {InstructionSequence 1 Original, Range=1f-20 }
        .line 367,367 : 13,14
        nop       
        {
          // InstructionBlock 9 [], 1 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 20-5d
          .locals init ( [2]  class [NSTM]NSTM.INstmTransaction tx)
          // InstructionBlock 11 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 20-26

        IL_0002:
          // {InstructionSequence 2 Original, Range=20-26 }
          .line 369,369 : 24,75
          call       class [NSTM]NSTM.INstmTransaction [NSTM]NSTM.NstmMemory::BeginTransaction()
          stloc.2   
          .try
          {
            // InstructionBlock 7 [], 1 local(s), 1 handler(s), 0 child(ren), 1 sequence(s), 26-4b
            .locals init ( [3]  float64 amountToTransfer)

          IL_0003:
            // {InstructionSequence 3 Original, Range=26-4b }
            .line 370,370 : 17,18
            nop       
            .line 371,371 : 21,51
            ldc.r8     150.
            stloc.3   
            .line 373,373 : 21,74
            ldloc.0   
            ldloc.0   
            callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<float64>::Read()
            ldloc.3   
            sub       
            callvirt   instance void class [NSTM]NSTM.INstmObject`1<float64>::Write(!0)
            nop       
            .line 375,375 : 21,89
            ldstr       "Error during processing transfer!"
            newobj     instance void [mscorlib]System.ApplicationException::.ctor(string)
            throw     
          }
          finally
          {
            // InstructionBlock 8 [], 0 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 4b-5d

          IL_0004:
            // {InstructionSequence 4 Original, Range=4b-55 }
            .line 0x00feefee
            ldloc.2   
            ldnull    
            ceq       
            stloc.s    CS$4$0000
            ldloc.s    CS$4$0000
            brtrue.s   IL_0006

          IL_0005:
            // {InstructionSequence 5 Original, Range=55-5c }
            ldloc.2   
            callvirt   instance void [mscorlib]System.IDisposable::Dispose()
            nop       

          IL_0006:
            // {InstructionSequence 6 Original, Range=5c-5d }
            endfinally
          }
        }
      }
      catch [mscorlib]System.Exception
      {
        // InstructionBlock 4 [], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 5d-75
        .locals init ( [4]  class [mscorlib]System.Exception ex)

      IL_0007:
        // {InstructionSequence 7 Original, Range=5d-75 }
        .line 383,383 : 13,32
        stloc.s    ex
        .line 384,384 : 13,14
        nop       
        .line 385,385 : 17,58
        ldstr       "*** {0}"
        ldloc.s    ex
        callvirt   instance string [mscorlib]System.Exception::get_Message()
        call       void [mscorlib]System.Console::WriteLine(string,
                                                            object)
        nop       
        .line 386,386 : 13,14
        nop       
        .line 0x00feefee
        leave.s    IL_0008
      }
      // InstructionBlock 5 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 75-a3

    IL_0008:
      // {InstructionSequence 8 Original, Range=75-a3 }
      .line 0x00feefee
      nop       
      .line 388,388 : 13,76
      ldstr       "My account balance: {0}"
      ldloc.0   
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<float64>::Read()
      box        [mscorlib]System.Double
      call       void [mscorlib]System.Console::WriteLine(string,
                                                          object)
      nop       
      .line 389,389 : 13,80
      ldstr       "Your account balance: {0}"
      ldloc.1   
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<float64>::Read()
      box        [mscorlib]System.Double
      call       void [mscorlib]System.Console::WriteLine(string,
                                                          object)
      nop       
      .line 390,390 : 9,10
      ret       
    }
  }
  // End of method: SimpleSample.Program/MainException(string[] args) : void

  .method private hidebysig static void MainNoException(string[] args) cil managed
  {
    .maxstack 3
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 3 local(s), 0 handler(s), 3 child(ren), 0 sequence(s), 0-98
      .locals init ( [0]  class [NSTM]NSTM.INstmObject`1<float64> myAccount,
                     [1]  class [NSTM]NSTM.INstmObject`1<float64> yourAccount,
                     [4]  bool CS$4$0000)
      // InstructionBlock 7 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-1f

    IL_0000:
      // {InstructionSequence 0 Original, Range=0-1f }
      .line 394,394 : 9,10  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 398,398 : 13,63
      ldc.r8     1000.
      call       class [NSTM]NSTM.INstmObject`1<!!0> [NSTM]NSTM.NstmMemory::CreateObject<float64>(!!0)
      stloc.0   
      .line 399,399 : 13,64
      ldc.r8     500.
      call       class [NSTM]NSTM.INstmObject`1<!!0> [NSTM]NSTM.NstmMemory::CreateObject<float64>(!!0)
      stloc.1   
      {
        // InstructionBlock 6 [], 1 local(s), 0 handler(s), 4 child(ren), 0 sequence(s), 1f-6a
        .locals init ( [2]  class [NSTM]NSTM.INstmTransaction tx)
        // InstructionBlock 8 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 1f-25

      IL_0001:
        // {InstructionSequence 1 Original, Range=1f-25 }
        .line 401,401 : 20,71
        call       class [NSTM]NSTM.INstmTransaction [NSTM]NSTM.NstmMemory::BeginTransaction()
        stloc.2   
        .try
        {
          // InstructionBlock 2 [], 0 local(s), 1 handler(s), 2 child(ren), 0 sequence(s), 25-58
          {
            // InstructionBlock 11 [], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 25-56
            .locals init ( [3]  float64 amountToTransfer)

          IL_0002:
            // {InstructionSequence 2 Original, Range=25-56 }
            .line 402,402 : 13,14
            nop       
            .line 403,403 : 17,47
            ldc.r8     150.
            stloc.3   
            .line 405,405 : 17,70
            ldloc.0   
            ldloc.0   
            callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<float64>::Read()
            ldloc.3   
            sub       
            callvirt   instance void class [NSTM]NSTM.INstmObject`1<float64>::Write(!0)
            nop       
            .line 406,406 : 17,74
            ldloc.1   
            ldloc.1   
            callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<float64>::Read()
            ldloc.3   
            add       
            callvirt   instance void class [NSTM]NSTM.INstmObject`1<float64>::Write(!0)
            nop       
            .line 408,408 : 17,29
            ldloc.2   
            callvirt   instance void [NSTM]NSTM.INstmTransaction::Commit()
            nop       
            .line 409,409 : 13,14
            nop       
          }
          // InstructionBlock 12 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 56-58

        IL_0003:
          // {InstructionSequence 3 Original, Range=56-58 }
          .line 0x00feefee
          leave.s    IL_0007
        }
        finally
        {
          // InstructionBlock 4 [], 0 local(s), 0 handler(s), 0 child(ren), 3 sequence(s), 58-6a

        IL_0004:
          // {InstructionSequence 4 Original, Range=58-62 }
          ldloc.2   
          ldnull    
          ceq       
          stloc.s    CS$4$0000
          ldloc.s    CS$4$0000
          brtrue.s   IL_0006

        IL_0005:
          // {InstructionSequence 5 Original, Range=62-69 }
          ldloc.2   
          callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          nop       

        IL_0006:
          // {InstructionSequence 6 Original, Range=69-6a }
          endfinally
        }
        // InstructionBlock 9 [], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 6a-6a
      }
      // InstructionBlock 10 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 6a-98

    IL_0007:
      // {InstructionSequence 7 Original, Range=6a-98 }
      .line 0x00feefee
      nop       
      .line 411,411 : 13,76
      ldstr       "My account balance: {0}"
      ldloc.0   
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<float64>::Read()
      box        [mscorlib]System.Double
      call       void [mscorlib]System.Console::WriteLine(string,
                                                          object)
      nop       
      .line 412,412 : 13,80
      ldstr       "Your account balance: {0}"
      ldloc.1   
      callvirt   instance !0 class [NSTM]NSTM.INstmObject`1<float64>::Read()
      box        [mscorlib]System.Double
      call       void [mscorlib]System.Console::WriteLine(string,
                                                          object)
      nop       
      .line 413,413 : 9,10
      ret       
    }
  }
  // End of method: SimpleSample.Program/MainNoException(string[] args) : void

  .method private hidebysig static void MainNoTx() cil managed
  {
    .maxstack 2
    .language  '{3f5162f8-07c6-11d3-9053-00c04fa302a1}',  '{994b45c4-e6e9-11d2-903f-00c04fa302a1}',  '{5a869d0b-6611-11d3-bd2a-0000f80849bd}'

    {
      // InstructionBlock 0 [], 3 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-28
      .locals init ( [0]  float64 myAccount,
                     [1]  float64 yourAccount,
                     [2]  float64 amountToTransfer)

    IL_0000:
      // {InstructionSequence 0 Original, Range=0-28 }
      .line 417,417 : 9,10  'C:\\My Software Projects\\XVSM\\SoftwareTransactionalMemory Prototype\\SimpleSample\\Program.cs'
      nop       
      .line 421,421 : 13,30
      ldc.r8     1000.
      stloc.0   
      .line 422,422 : 13,31
      ldc.r8     500.
      stloc.1   
      .line 424,424 : 13,43
      ldc.r8     150.
      stloc.2   
      .line 425,425 : 13,43
      ldloc.0   
      ldloc.2   
      sub       
      stloc.0   
      .line 426,426 : 13,45
      ldloc.1   
      ldloc.2   
      add       
      stloc.1   
      .line 427,427 : 9,10
      ret       
    }
  }
  // End of method: SimpleSample.Program/MainNoTx() : void

  .method public hidebysig specialname rtspecialname
          instance void .ctor() cil managed
  {
    .maxstack 8
    // InstructionBlock 0 [], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-7

  IL_0000:
    // {InstructionSequence 0 Original, Range=0-7 }
    ldarg.0   
    call       instance void [mscorlib]System.Object::.ctor()
    ret       
  }
  // End of method: SimpleSample.Program/.ctor() : void

  .method private hidebysig specialname rtspecialname static
          void .cctor() cil managed
  {
    .maxstack 2
    {
      // InstructionBlock 2 [New Root Block], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
      {
        // InstructionBlock 3 [Entry Block], 0 local(s), 0 handler(s), 0 child(ren), 0 sequence(s), 0-0
      }
      // InstructionBlock 4 [], 0 local(s), 0 handler(s), 2 child(ren), 0 sequence(s), 0-0
      // InstructionBlock 5 [], 0 local(s), 0 handler(s), 0 child(ren), 2 sequence(s), 0-0

    IL_0003:
      // {InstructionSequence 3 Modified, Comment=""}
      ldsfld     bool '~PostSharp~Laos~Implementation'::initialized
      brtrue.s   IL_0002
      call       void [PostSharp.Laos]PostSharp.Laos.LaosNotInitializedException::Throw()

    IL_0002:
      // {InstructionSequence 2 Modified, Comment=""}
      ldtoken    method void SimpleSample.Program::TransferMoney(int32)
      call       class [mscorlib]System.Reflection.MethodBase [mscorlib]System.Reflection.MethodBase::GetMethodFromHandle(valuetype [mscorlib]System.RuntimeMethodHandle)
      stsfld     class [mscorlib]System.Reflection.MethodBase '~PostSharp~Laos~Implementation':: '~targetMethod~5'
      ldsfld     class [NSTM]NSTM.NstmAtomicAttribute '~PostSharp~Laos~Implementation':: '~aspect~5'
      ldsfld     class [mscorlib]System.Reflection.MethodBase '~PostSharp~Laos~Implementation':: '~targetMethod~5'
      callvirt   instance void [PostSharp.Laos]PostSharp.Laos.LaosMethodLevelAspect::RuntimeInitialize(class [mscorlib]System.Reflection.MethodBase)
      {
        // InstructionBlock 0 [Old Root Block], 0 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0

      IL_0000:
        // {InstructionSequence 0 Modified, Comment=""}
        ret       
      }
    }
  }
  // End of method: SimpleSample.Program/.cctor() : void

}
// End of type: SimpleSample.Program


.class private auto ansi sealed '~PostSharp~Laos~Implementation'
      extends [mscorlib]System.Object
{
  .field static assembly bool initialized

  .field static assembly initonly class [NSTM]NSTM.NstmAtomicAttribute  '~aspect~5'

  .field static assembly initonly class [NSTM]NSTM.NstmVersionableAspect  '~aspect~6'

  .field static assembly initonly class [NSTM]NSTM.NstmTransactionalAspect  '~aspect~7'

  .field static assembly initonly class [NSTM]NSTM.NstmTransactionalAspect  '~aspect~8'

  .field static assembly initonly class [NSTM]NSTM.NstmVersionableAspect  '~aspect~9'

  .field static assembly initonly class [NSTM]NSTM.NstmTransactionalAspect  '~aspect~10'

  .field static assembly initonly class [NSTM]NSTM.NstmTransactionalAspect  '~aspect~11'

  .field static assembly initonly class [NSTM]NSTM.NstmVersionableAspect  '~aspect~12'

  .field static assembly initonly class [NSTM]NSTM.NstmTransactionalAspect  '~aspect~13'

  .field static assembly initonly class [NSTM]NSTM.NstmTransactionalAspect  '~aspect~14'

  .field static assembly initonly class [NSTM]NSTM.NstmVersionableAspect  '~aspect~15'

  .field static assembly initonly class [NSTM]NSTM.NstmTransactionalAspect  '~aspect~16'

  .field static assembly class [mscorlib]System.Reflection.MethodBase  '~targetMethod~5'

  .field static assembly class [mscorlib]System.Type  '~targetType~6'

  .field static assembly class [mscorlib]System.Reflection.FieldInfo  '~targetField~8'

  .field static assembly class [mscorlib]System.Reflection.FieldInfo  '~targetField~7'

  .field static assembly class [mscorlib]System.Type  '~targetType~9'

  .field static assembly class [mscorlib]System.Reflection.FieldInfo  '~targetField~11'

  .field static assembly class [mscorlib]System.Reflection.FieldInfo  '~targetField~10'

  .field static assembly class [mscorlib]System.Type  '~targetType~12'

  .field static assembly class [mscorlib]System.Reflection.FieldInfo  '~targetField~14'

  .field static assembly class [mscorlib]System.Reflection.FieldInfo  '~targetField~13'

  .field static assembly class [mscorlib]System.Type  '~targetType~15'

  .field static assembly class [mscorlib]System.Reflection.FieldInfo  '~targetField~16'

  .method private hidebysig specialname rtspecialname static
          void .cctor() cil managed
  {
    .maxstack 2
    {
      // InstructionBlock 0 [], 1 local(s), 0 handler(s), 0 child(ren), 1 sequence(s), 0-0
      .locals init ( [0]  object[] customAttributeArray)

    IL_0000:
      // {InstructionSequence 0 Modified, Comment=""}
      call       class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::GetCallingAssembly()
      ldstr       "~PostSharp~Laos~CustomAttributes~"
      call       object [PostSharp.Laos]PostSharp.Laos.Internals::DeserializeFromResource(class [mscorlib]System.Reflection.Assembly,
                                                                                          string)
      castclass  object[]
      stloc      customAttributeArray
      ldloc      customAttributeArray
      ldc.i4     0x0
      ldelem     object
      castclass  [NSTM]NSTM.NstmAtomicAttribute
      stsfld     class [NSTM]NSTM.NstmAtomicAttribute '~PostSharp~Laos~Implementation':: '~aspect~5'
      ldloc      customAttributeArray
      ldc.i4     0x1
      ldelem     object
      castclass  [NSTM]NSTM.NstmVersionableAspect
      stsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~6'
      ldloc      customAttributeArray
      ldc.i4     0x2
      ldelem     object
      castclass  [NSTM]NSTM.NstmTransactionalAspect
      stsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~7'
      ldloc      customAttributeArray
      ldc.i4     0x3
      ldelem     object
      castclass  [NSTM]NSTM.NstmTransactionalAspect
      stsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~8'
      ldloc      customAttributeArray
      ldc.i4     0x4
      ldelem     object
      castclass  [NSTM]NSTM.NstmVersionableAspect
      stsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~9'
      ldloc      customAttributeArray
      ldc.i4     0x5
      ldelem     object
      castclass  [NSTM]NSTM.NstmTransactionalAspect
      stsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~10'
      ldloc      customAttributeArray
      ldc.i4     0x6
      ldelem     object
      castclass  [NSTM]NSTM.NstmTransactionalAspect
      stsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~11'
      ldloc      customAttributeArray
      ldc.i4     0x7
      ldelem     object
      castclass  [NSTM]NSTM.NstmVersionableAspect
      stsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~12'
      ldloc      customAttributeArray
      ldc.i4     0x8
      ldelem     object
      castclass  [NSTM]NSTM.NstmTransactionalAspect
      stsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~13'
      ldloc      customAttributeArray
      ldc.i4     0x9
      ldelem     object
      castclass  [NSTM]NSTM.NstmTransactionalAspect
      stsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~14'
      ldloc      customAttributeArray
      ldc.i4     0xa
      ldelem     object
      castclass  [NSTM]NSTM.NstmVersionableAspect
      stsfld     class [NSTM]NSTM.NstmVersionableAspect '~PostSharp~Laos~Implementation':: '~aspect~15'
      ldloc      customAttributeArray
      ldc.i4     0xb
      ldelem     object
      castclass  [NSTM]NSTM.NstmTransactionalAspect
      stsfld     class [NSTM]NSTM.NstmTransactionalAspect '~PostSharp~Laos~Implementation':: '~aspect~16'
      ldc.i4.1  
      stsfld     bool '~PostSharp~Laos~Implementation'::initialized
      ret       
    }
  }
  // End of method: ~PostSharp~Laos~Implementation/.cctor() : void

}
// End of type: ~PostSharp~Laos~Implementation


